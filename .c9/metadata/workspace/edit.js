{"filter":false,"title":"edit.js","tooltip":"/edit.js","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":1389,"column":1},"action":"remove","lines":["// Edit.js","","CREATION_OPTIONS = { cancel:true };","var bgmusic = [];","var attribs;","","var selected = [], panSpeed = 20, ctp = \"\";","var hovers = [], tps;","var sc, sctx, scamera = { x:0, y:0 }, ganim = [], copypasta = false,","\tcamBounds, resizingCamera = { x:false, y:false, width:false, height:false };","","var ctexture, levelMusic, currentSong;","var spritetype, laston = false;","var ALL_OVERRIDE = true;","","var ewin;","","var BLOCK_TYPES = [\"blank\", \"ledge\", \"solid\", \"hurt\", \"kill\", \"vine\"],","\tSPRITE_TYPES = [\"koopa\"];","","var gfx = false, gfy = false, grot = 0;","","function importLevel(s, cb)","{","\tif (levelMusic instanceof Sound)","\t\tlevelMusic.stop();","\tclearGame();","\tblocks = [];","\t","\tvar lns = s.split(\"\\n\");","\tfor (var i in lns)","\t{","\t\tvar l = lns[i];","\t\tvar t = l.split(\" \");","\t\tswitch (t[0])","\t\t{","\t\t\tcase \"h_1\":","\t\t\t\tgame.camera.x = +t[1];","\t\t\t\tgame.camera.y = +t[2];","\t\t\t\tscamera.x = +t[3];","\t\t\t\tscamera.y = +t[4];","\t\t\t\tgame.camera.scale.x = +t[5];","\t\t\t\tgame.camera.scale.y = +t[6];","\t\t\t\tbreak;","\t\t\tcase \"h_2\":","\t\t\t\tcamBounds.x = +t[1];","\t\t\t\tcamBounds.y = +t[2];","\t\t\t\tcamBounds.width = +t[3];","\t\t\t\tcamBounds.height = +t[4];","\t\t\t\tbreak;","\t\t\tcase \"bg\":","\t\t\t\tgame.running.push(false);","\t\t\t\tbackground = new Texture({ type:\"texture\", texturePack:new TexturePack({ source:t[1], callback:function(){","\t\t\t\t\tgame.running.splice(game.running.indexOf(false), 1);","\t\t\t\t} }) });","\t\t\t\tbreak;","\t\t\tcase \"b\":","\t\t\t\tvar bx = +t[1] / bs;","\t\t\t\tvar by = +t[2] / bs;","\t\t\t\tvar tex = new Texture({ type:\"texture\", texturePack:game.texturePacks.get(+t[4]), animation:strtoarr(t[3]) });","\t\t\t\tvar b = addBlock({ x:bx, y:by, texture:tex, type:t[5] });","\t\t\t\tif (t.length > 6)","\t\t\t\t{","\t\t\t\t\tb.texture.flipX = JSON.parse(t[6]);","\t\t\t\t\tb.texture.flipY = JSON.parse(t[7]);","\t\t\t\t\tb.texture.rotation = JSON.parse(t[8]);","\t\t\t\t}","\t\t\t\tb.isBlock = true;","\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\tbreak;","\t\t\tcase \"s\":","\t\t\t\tvar sp = SPRITES[t[3]]({ x:+t[1], y:+t[2] });","\t\t\t\tvar props = t[4];","\t\t\t\t","\t\t\t\tif (props)","\t\t\t\t{","\t\t\t\t\tsp.attributes = [];","\t\t\t\t\tvar spl = props.substring(1, props.length - 1).split(\",\");","\t\t\t\t\t","\t\t\t\t\tif (spl.length == 1 && spl[0] != \"\" || spl.length > 1)","\t\t\t\t\t{","\t\t\t\t\t\tfor (var j in spl)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tvar p = spl[j];","\t\t\t\t\t\t\tvar nam = p.substring(0, p.indexOf(\":\"));","\t\t\t\t\t\t\t","\t\t\t\t\t\t\tvar val = JSON.parse( p.substring(p.indexOf(\":\") + 1) );","\t\t\t\t\t\t\tsp.attributes.push(nam);","\t\t\t\t\t\t\tsp[nam] = val;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tif (t.length > 5)","\t\t\t\t{","\t\t\t\t\tsp.texture.flipX = JSON.parse(t[5]);","\t\t\t\t\tsp.texture.flipY = JSON.parse(t[6]);","\t\t\t\t\tsp.texture.rotation = JSON.parse(t[7]);","\t\t\t\t}","\t\t\t\tgame.sprites.add(sp);","\t\t\t\tbreak;","\t\t\tcase \"m\":","\t\t\t\tif (levelMusic)","\t\t\t\t\tlevelMusic.stop();","\t\t\t\tlevelMusic = new Sound({ source:t[1], loop:true });","\t\t\t\tlevelMusic.play();","\t\t\t\tbreak;","\t\t}","\t}","\tif (typeof cb == \"function\")","\t\tcb();","}","function exportLevel()","{","\tvar s = \"\";","\ts += \"h_1 \" + game.camera.x + \" \" + game.camera.y + \" \" + scamera.x + \" \" + scamera.y + \" \" + game.camera.scale.x + \" \" + game.camera.scale.y + \"\\n\";","\ts += \"h_2 \" + camBounds.x + \" \" + camBounds.y + \" \" + camBounds.width + \" \" + camBounds.height + \"\\n\";","\ts += \"bg \" + background.texturePack.src + \"\\n\";","\tvar bs = \"\";","\tvar ps = [];","\tfor (var i in blocks)","\t{","\t\tvar b = blocks[i];","\t\tif (b instanceof Sprite){","\t\t\tif (ps.indexOf(b.texture.texturePack.image.src) == -1)","\t\t\t\tps.push(b.texture.texturePack.image.src);","\t\t\tbs += \"b \" + b.x + \" \" + b.y + \" \" + arrtostr(b.texture.animation) + \" \" + ps.indexOf(b.texture.texturePack.image.src) + \" \" + b.type.split(\" \")[0] + \" \" + b.texture.flipX + \" \" + b.texture.flipY + \" \" + b.texture.rotation + \"\\n\";","\t\t}","\t}","\tfor (var i in game.sprites.values)","\t{","\t\tvar sp = game.sprites.values[i];","\t\t","\t\tif (sp.texture.type == \"texture\")","\t\t\tbs += \"s \" + sp.x + \" \" + sp.y + \" \" + sp.type.split(\" \")[0] + \" {\";","\t\t\tvar a = sp.attributes;","\t\t\tif (a)","\t\t\t{","\t\t\t\tfor (var j in a)","\t\t\t\t{","\t\t\t\t\tbs += a[j] + \":\";","\t\t\t\t\tvar v = sp[a[j]];","\t\t\t\t\tif (typeof v == \"boolean\" || typeof v == \"number\")","\t\t\t\t\t\tbs += v;","\t\t\t\t\telse if (typeof v == \"string\")","\t\t\t\t\t\tbs += \"\\\"\" + v + \"\\\"\";","\t\t\t\t\telse if (v instanceof Array)","\t\t\t\t\t\tbs += arrtostr(v);","\t\t\t\t\tbs += \",\";","\t\t\t\t}","\t\t\t\tif (a.length > 0)","\t\t\t\t\tbs = bs.substring(0, bs.length - 1);","\t\t\t}","\t\t\tbs += \"} \" + sp.texture.flipX + \" \" + sp.texture.flipY + \" \" + sp.texture.rotation + \"\\n\";","\t}/*","\tfor (var i in ps)","\t\ts += \"p \" + ps[i] + \"\\n\";*/","\ts += bs;","\tif (levelMusic instanceof Sound)","\t\ts += \"m \" + levelMusic.src + \"\\n\";","\treturn s;","}","function arrtostr(a)","{","\tif (a.length == 0)","\t\treturn \"[]\";","\tvar r = \"[\";","\tfor (var i = 0; i < a.length; i++)","\t{","\t\tvar v = a[i];","\t\tif (typeof v == \"string\")","\t\t\tr += \"\\\"\" + v + \"\\\"\";","\t\telse","\t\t\tr += v;","\t\tr += \",\";","\t}","\treturn r.substring(0, r.length - 1) + \"]\";","}","function strtoarr(s)","{","\ts = s.replace(/\\[|\\]/g, \"\");","\tvar sp = s.split(\",\");","\tfor (var i in sp)","\t\tsp[i] = +sp[i];","\treturn sp;","}","function download(name, text)","{","    var el = document.createElement(\"a\");","    document.body.appendChild(el);","    el.setAttribute(\"href\", \"data:text/plain;charset:utf-8,\" + encodeURIComponent(text));","    el.setAttribute(\"download\", name);","    el.click();","    document.body.removeChild(el);","}","","function doLoad()","{","\tbackground = new Texture({ texturePack:new TexturePack({ source:\"Edit/Backgrounds/woven.png\" }) });","\tcamBounds = { x:-game.mc.width / 2, y:-game.mc.height / 2, width:game.mc.width, height:game.mc.height };","\t","\tdocument.getElementById(\"bgchange\").onclick = function()","\t{","\t\tvar nf = prompt(\"Type in the name of the new background you would like to use (All backgrounds mentioned here are automatically assumed to be within the 'Backgrounds' folder):\");","\t\tif (nf)","\t\t{","\t\t\tif (nf.split(\".\").length == 1)","\t\t\t\tnf += \".png\";","\t\t\tvar tp = new TexturePack({ source:\"Backgrounds/\" + nf, callback:function(img){","\t\t\t\tif (img)","\t\t\t\t\tbackground = new Texture({ texturePack:tp });","\t\t\t} });","\t\t}","\t\tclearInput();","\t}","\tdocument.getElementById(\"changemusic\").onclick = function()","\t{","\t\tif (levelMusic instanceof Sound)","\t\t\tlevelMusic.pause();","\t\tvar nf = prompt(\"Please type the name of the music you would like to associate with this level (Music is assumed to be within the 'Music' folder)\");","\t\tif (nf)","\t\t{","\t\t\tif (nf.split(\".\").length == 1)","\t\t\t\tnf += \".mp3\";","\t\t\tif (levelMusic)","\t\t\t\tlevelMusic.stop();","\t\t\tlevelMusic = new Sound({ source:\"Music/\" + nf, loop:true });","\t\t\tif (currentSong)","\t\t\t\tcurrentSong.pause();","\t\t\tlevelMusic.play();","\t\t}","\t\telse","\t\t\tlevelMusic.play();","\t}","\t","\tdocument.getElementById(\"togglemusic\").onclick = function()","\t{","\t\tif (levelMusic instanceof Sound)","\t\t{","\t\t\tif (levelMusic.audio.paused)","\t\t\t\tlevelMusic.play();","\t\t\telse","\t\t\t\tlevelMusic.pause();","\t\t}","\t}","\tdocument.getElementById(\"addsprite\").onclick = function()","\t{","\t\tvar ty = spritetype.value;","\t\tvar p = game.untransform(game.mc.width / 2, game.mc.height / 2);","\t\tvar sp = SPRITES[ty]({ x:p.x, y:p.y });","\t\t","\t\tif (sp.x < camBounds.x)","\t\t\tsp.x = camBounds.x + bs;","\t\tif (sp.x + sp.width > camBounds.x + camBounds.width)","\t\t\tsp.x = camBounds.x + camBounds.width - sp.width;","\t\tif (sp.y < camBounds.y)","\t\t\tsp.y = camBounds.y + bs;","\t\tif (sp.y + sp.height > camBounds.y + camBounds.height)","\t\t\tsp.y = camBounds.y + camBounds.height - sp.height;","\t\t","\t\tif (sp.width % bs == 0 && sp.height % bs == 0)","\t\t{","\t\t\tsp.x = mod(sp.x);","\t\t\tsp.y = mod(sp.y);","\t\t}","\t\t","\t\tif (typeof sp.priority != \"undefined\" && sp.priority == \"first\")","\t\t\tgame.sprites.addBefore(sp);","\t\telse","\t\t\tgame.sprites.add(sp);","\t}","\tdocument.getElementById(\"dgame\").onclick = function()","\t{","\t\tdownload(\"level.txt\", exportLevel());","\t}","\t","\tvar cdiv = document.createElement(\"div\");","\tcdiv.style.position = \"fixed\";","\tcdiv.style.left = \"0\";","\tcdiv.style.top = \"0\";","\tcdiv.style.right = \"0\";","\tcdiv.style.bottom = \"0\";","\tcdiv.style.background = \"black\";","\tcdiv.style.visibility = \"hidden\";","\tcdiv.style.opacity = \"0\";","\tcdiv.style.transition = \"opacity .5s\";","\t","\tdocument.body.appendChild(cdiv);","\t","\tvar ifr = document.createElement(\"iframe\");","\tifr.style.position = \"fixed\";","\tifr.width = 640;","\tifr.height = 480;","\tifr.style.border = \"none\";","\tifr.src = \"index.html\";","\tcdiv.appendChild(ifr);","\t","\tewin = ifr.contentWindow;","\tewin.DISABLE_SOUND = true;","\t","\tcdiv.onclick = function(){","\t\tcdiv.style.visibility = \"hidden\";","\t\tcdiv.style.opacity = \"0\";","\t\tewin.game.muteSounds = true;","\t\tgame.running.splice(game.running.indexOf(false), 1);","\t}","\t","\tfunction resized(){","\t\tifr.style.left = (window.innerWidth - ifr.width) / 2 + \"px\";","\t\tifr.style.top = (window.innerHeight - ifr.height) / 2 + \"px\";","\t}","\twindow.onresize = resized;","\tresized();","\t","\tdocument.getElementById(\"player\").onclick = function()","\t{","\t\tvar hasSpawnPoint = false;","\t\tfor (var i in game.sprites.values)","\t\t{","\t\t\tvar sp = game.sprites.values[i];","\t\t\tif (sp.type == \"spawnPoint\")","\t\t\t\thasSpawnPoint = true;","\t\t}","\t\tif (!hasSpawnPoint)","\t\t\treturn;","\t\t","\t\tewin.game.muteSounds = false;","\t\t","\t\tif (typeof levelMusic != \"undefined\" && levelMusic instanceof Sound)","\t\t\tlevelMusic.stop();","\t\t","\t\tewin.player.reset();","\t\tewin.addBuffer(EFFECTS.immediateBlack);","\t\t","\t\tcdiv.style.visibility = \"visible\";","\t\tgame.running.push(false);","\t\tcdiv.style.opacity = \"1\";","\t\tifr.focus();","\t\t","\t\tewin.readLevel(exportLevel(), function(){","\t\t\tewin.addBuffer(ewin.loadFunction);","\t\t\tewin.addBuffer(EFFECTS.fadeIn);","\t\t});","\t}","\t","\ttps = document.getElementById(\"texturePacks\");","\ttps.onchange = function()","\t{","\t\tctexture.animation = [0, 0, bs, bs];","\t}","\t","\tattribs = document.getElementById(\"attributes\");","\tupdateTexturePacks();","\tganim = [0, 0, bs, bs];","\t","\twindow.ondragover = function(e)","\t{","\t\te.preventDefault();","\t}","\twindow.ondrop = function(e)","\t{","\t\te.preventDefault();","\t\tvar f = e.dataTransfer.files[0];","\t\t","\t\taddBuffer(EFFECTS.fadeOut);","\t\taddBuffer(function(){","\t\t\tvar reader = new FileReader();","\t\t\treader.onload = function(){","\t\t\t\timportLevel(reader.result, function(){","\t\t\t\t\taddBuffer(EFFECTS.fadeIn);","\t\t\t\t});","\t\t\t}","\t\t\treader.readAsText(f);","\t\t});","\t}","\twindow.onblur = function()","\t{","\t\tif (levelMusic)","\t\t{","\t\t\tif (!levelMusic.audio.paused)","\t\t\t{","\t\t\t\tlevelMusic.pause();","\t\t\t\tlevelMusic.wasPlaying = true;","\t\t\t}","\t\t}","\t}","\twindow.onfocus = function()","\t{","\t\tif (levelMusic && levelMusic.wasPlaying)","\t\t{","\t\t\tlevelMusic.play();","\t\t\tlevelMusic.wasPlaying = false;","\t\t}","\t}","\t","\tspritetype = document.getElementById(\"spritetype\");","\tspritetype.innerHTML = \"\";","\t","\tfor (var i in SPRITES)","\t{","\t\tif (i != \"mario\")","\t\t{","\t\t\tvar op = document.createElement(\"option\");","\t\t\top.innerHTML = i;","\t\t\tspritetype.appendChild(op);","\t\t}","\t}","\t","\tsc = document.getElementById(\"chooser\");","\tsc.width = 500;","\tsc.height = 400;","\tsc.style.background = \"black\";","\tsctx = sc.getContext(\"2d\");","\tsctx.imageSmoothingEnabled = false;","\t","\tctp = tps.value;","}","function getCurrentTextureIndex()","{","\tfor (var i = 0; i < game.texturePacks.values.length; i++)","\t{","\t\tvar p = game.texturePacks.values[i];","\t\tvar img = p.image;","\t\tif (img)","\t\t\tif (p.src == tps.value)","\t\t\t\treturn i;","\t}","}","","function update()","{","\tif (ewin && ewin.game)","\t\tewin.game.muteSounds = !ewin.document.hasFocus();","\thovers = [];","\t","\tchoose();","\tinput();","\tclampCamera();","}","","function clampCamera()","{","\tvar lw = 2;","\tvar ta = game.untransform(0, 0);","\tif (!camBounds)","\t\treturn;","\tif (game.camera.x >= (camBounds.x + camBounds.width - lw) / game.camera.scale.x)","\t\tgame.camera.x = (camBounds.x + camBounds.width - lw) / game.camera.scale.x;","\tif (game.camera.y >= (camBounds.y + camBounds.height - lw) / game.camera.scale.y)","\t\tgame.camera.y = (camBounds.y + camBounds.height - lw) / game.camera.scale.y;","\t","\tif (game.camera.x + game.mc.width <= (camBounds.x + lw) / game.camera.scale.x)","\t\tgame.camera.x = (camBounds.x + lw) / game.camera.scale.x - game.mc.width;","\tif (game.camera.y + game.mc.height <= (camBounds.y + lw) / game.camera.scale.y)","\t\tgame.camera.y = (camBounds.y + lw) / game.camera.scale.y - game.mc.height;","}","","function choose()","{","\tif (!sc)","\t\treturn;","\tif (tps.value == \"\")","\t\ttps.value = tps.firstChild.innerHTML;","\tsc.width = sc.width;","\t","\tvar cind = getCurrentTextureIndex();","\tvar pack = game.texturePacks.get(cind);","\t","\tif (typeof pack.map == \"undefined\")","\t{","\t\tpack.map = [];","\t\tif (typeof MAPS[pack.src] != \"undefined\")","\t\t\tpack.map = MAPS[pack.src];","\t}","\t","\tif (cursorInChoose() && isKeyDown(keys.space))","\t{","\t\tsc.style.cursor = \"move\";","\t\tif (mouse.isDown)","\t\t{","\t\t\tscamera.x -= mouse.x - mouse.last.x;","\t\t\tscamera.y -= mouse.y - mouse.last.y;","\t\t\t","\t\t\tif (scamera.x < 0)","\t\t\t\tscamera.x = 0;","\t\t\tif (scamera.x > pack.image.width - 1)","\t\t\t\tscamera.x = pack.image.width - 1;","\t\t\tif (scamera.y < 0)","\t\t\t\tscamera.y = 0;","\t\t\tif (scamera.y > pack.image.height - 1)","\t\t\t\tscamera.y = pack.image.height - 1;","\t\t}","\t}","\telse if (cursorInChoose())","\t{","\t\tsc.style.cursor = \"default\";","\t\tvar smouse = { x:mouse.x + game.mc.offsetLeft - sc.offsetLeft, y:mouse.y + game.mc.offsetTop - sc.offsetTop };","\t\tvar cmouse = { x:smouse.x + scamera.x, y:smouse.y + scamera.y };","\t\t","\t\tif (mod(cmouse.x) < pack.image.width && mod(cmouse.y) < pack.image.height)","\t\t{","\t\t\tif (getMouseDown(1))","\t\t\t{","\t\t\t\tganim = [ mod(cmouse.x), mod(cmouse.y), bs, bs ];","\t\t\t\tlaston = false;","\t\t\t\tselected = [];","\t\t\t\taddBlockAttribs();","\t\t\t}","\t\t\telse if (getMouseDown(3))","\t\t\t\tganim.push( mod(cmouse.x), mod(cmouse.y), bs, bs );","\t\t\t","\t\t\tif (getMouseDown(1) || getMouseDown(3))","\t\t\t{","\t\t\t\tctp = tps.value;","\t\t\t\tgfx = false;","\t\t\t\tgfy = false;","\t\t\t\tgrot = 0;","\t\t\t}","\t\t}","\t\t","\t}","\t","\tif (ctp != tps.value)","\t\treturn;","\tsctx.drawImage( pack.image, -scamera.x, -scamera.y, pack.image.width, pack.image.height );","\tsctx.strokeStyle = \"red\";","\tsctx.lineWidth = 2;","\t","\tif (ctp == tps.value)","\t{","\t\tvar anim = ganim;","\t\tfor (var i = 0; i < anim.length; i += 4)","\t\t\tsctx.strokeRect( anim[i] - scamera.x, anim[i + 1] - scamera.y, anim[i + 2], anim[i + 3] );","\t}","}","","function cursorInChoose()","{","\tvar nmouse = { x:mouse.x + game.mc.offsetLeft - sc.offsetLeft, y:mouse.y + game.mc.offsetTop - sc.offsetTop };","\treturn nmouse.x >= 0 && nmouse.x <= sc.width && nmouse.y >= 0 && nmouse.y <= sc.height;","}","","function input()","{","\tif (document.activeElement != document.body)","\t\treturn;","\tvar dselect = false, nmouse = game.untransform(mouse), lnmouse = game.untransform(mouse.last);","\t","\tif (!attribs)","\t\treturn;","\tvar tbox = attribs.getBoundingClientRect();","\t","\tif (keydowns.length == 0)","\t{","\t\tvar lwx = 2 / game.camera.scale.x;","\t\tvar lwy = 2 / game.camera.scale.y;","\t\t","\t\tif (nmouse.x >= camBounds.x - lwx && nmouse.x <= camBounds.x + lwx)","\t\t{","\t\t\tgame.mc.style.cursor = \"w-resize\";","\t\t\tif (getMouseDown(1))","\t\t\t\tresizingCamera.x = true;","\t\t}","\t\telse if (nmouse.x >= camBounds.x + camBounds.width - lwx && nmouse.x <= camBounds.x + camBounds.width + lwx)","\t\t{","\t\t\tgame.mc.style.cursor = \"e-resize\";","\t\t\tif (getMouseDown(1))","\t\t\t\tresizingCamera.width = true;","\t\t}","\t\telse if (nmouse.y >= camBounds.y - lwy && nmouse.y <= camBounds.y + lwy)","\t\t{","\t\t\tgame.mc.style.cursor = \"n-resize\";","\t\t\tif (getMouseDown(1))","\t\t\t\tresizingCamera.y = true;","\t\t}","\t\telse if (nmouse.y >= camBounds.y + camBounds.height - lwy && nmouse.y <= camBounds.y + camBounds.height + lwy)","\t\t{","\t\t\tgame.mc.style.cursor = \"s-resize\";","\t\t\tif (getMouseDown(1))","\t\t\t\tresizingCamera.height = true;","\t\t}","\t\telse if (!(resizingCamera.x || resizingCamera.y || resizingCamera.width || resizingCamera.height))","\t\t\tgame.mc.style.cursor = \"default\";","\t}","\tif (resizingCamera.x || resizingCamera.y || resizingCamera.width || resizingCamera.height)","\t{","\t\tselected = [];","\t\tvar diff = { x:nmouse.x - lnmouse.x, y:nmouse.y - lnmouse.y };","\t\tvar rb = { right:camBounds.x + camBounds.width, bottom:camBounds.y + camBounds.height };","\t\t","\t\tif (resizingCamera.x)","\t\t{","\t\t\tif (rb.right - (camBounds.x + diff.x) >= game.mc.width && nmouse.x <= camBounds.x + camBounds.width - game.mc.width)","\t\t\t{","\t\t\t\tcamBounds.x += diff.x;","\t\t\t\tcamBounds.width -= diff.x;","\t\t\t}","\t\t}","\t\tif (resizingCamera.y)","\t\t{","\t\t\tif (rb.bottom - (camBounds.y + diff.y) >= game.mc.height && nmouse.y <= camBounds.y + camBounds.height - game.mc.height)","\t\t\t{","\t\t\t\tcamBounds.y += diff.y;","\t\t\t\tcamBounds.height -= diff.y;","\t\t\t}","\t\t}","\t\tif (resizingCamera.width)","\t\t{","\t\t\tif ((camBounds.width + diff.x) >= game.mc.width && nmouse.x >= camBounds.x + game.mc.width)","\t\t\t\tcamBounds.width += diff.x;","\t\t}","\t\tif (resizingCamera.height)","\t\t{","\t\t\tif ((camBounds.height + diff.y) >= game.mc.height && nmouse.y >= camBounds.y + game.mc.height)","\t\t\t\tcamBounds.height += diff.y;","\t\t}\t","\t}","\telse","\t{","\t\tif (getMouseDown() && !cursorInBounds() && !cursorInChoose() && mouse.x < tbox.left - game.mc.offsetLeft)","\t\t{","\t\t\tclearAttributes();","\t\t\tselected = [];","\t\t}","\t\tif (selected.length == 0)","\t\t{","\t\t\tif (isKeyDown(keys.left))","\t\t\t\tgame.camera.x -= panSpeed;","\t\t\tif (isKeyDown(keys.right))","\t\t\t\tgame.camera.x += panSpeed;","\t\t\tif (isKeyDown(keys.up))","\t\t\t\tgame.camera.y -= panSpeed;","\t\t\tif (isKeyDown(keys.down))","\t\t\t\tgame.camera.y += panSpeed;","\t\t}","\t\telse","\t\t{","\t\t\tif (getKeyDown(keys.delete) || getKeyDown(keys.back))","\t\t\t{","\t\t\t\tvar hs = false;","\t\t\t\tfor (var i in selected)","\t\t\t\t{","\t\t\t\t\tvar sp = selected[i];","\t\t\t\t\tif (sp.isBlock)","\t\t\t\t\t{","\t\t\t\t\t\tbset(sp.x / bs, sp.y / bs, null);","\t\t\t\t\t}","\t\t\t\t\telse","\t\t\t\t\t{","\t\t\t\t\t\tvar ind = game.sprites.values.indexOf(sp);","\t\t\t\t\t\tgame.sprites.values.splice(ind, 1);","\t\t\t\t\t\tgame.sprites.keys.splice(ind, 1);","\t\t\t\t\t\ths = true;","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t}","\t\t\t\t","\t\t\t\tif (hs)","\t\t\t\t{","\t\t\t\t\tgfx = false;","\t\t\t\t\tgfy = false;","\t\t\t\t\tgrot = 0;","\t\t\t\t\tganim = [0, 0, bs, bs];","\t\t\t\t}","\t\t\t\tctp = tps.value;","\t\t\t\tselected = [];","\t\t\t\tclearAttributes();","\t\t\t}","\t\t}","\t\t","\t\tif (isKeyDown(keys.space) && cursorInBounds())","\t\t{","\t\t\tgame.mc.style.cursor = \"move\";","\t\t\tif (mouse.isDown)","\t\t\t{","\t\t\t\tgame.camera.x -= nmouse.x - lnmouse.x;","\t\t\t\tgame.camera.y -= nmouse.y - lnmouse.y;","\t\t\t}","\t\t}","\t\telse if (isKeyDown(keys.s) && cursorInBounds())","\t\t{","\t\t\tgame.mc.style.cursor = \"crosshair\";","\t\t\tif (mouse.isDown)","\t\t\t{","\t\t\t\tgame.camera.scale.x -= (nmouse.y - lnmouse.y) / 100 * game.camera.scale.x;","\t\t\t\tif (game.camera.scale.x < .01)","\t\t\t\t\tgame.camera.scale.x = .01;","\t\t\t\t","\t\t\t\tgame.camera.scale.y = game.camera.scale.x;","\t\t\t}","\t\t}","\t\telse","\t\t{","\t\t\t//game.mc.style.cursor = \"default\";","\t\t\tif (cursorInBounds())","\t\t\t{","\t\t\t\t/*if (getMouseDown(3) && selected.length == 1 && selected[0].isBlock)","\t\t\t\t{","\t\t\t\t\tvar sp = selected[0];","\t\t\t\t\tganim = sp.texture.animation.slice(0);","\t\t\t\t\tselected = [];","\t\t\t\t}","\t\t\t\telse */if (getMouseDown(3) && selected.length > 0 || getMouseDown(3) && selected.length == 1 && !selected[0].isBlock)","\t\t\t\t{","\t\t\t\t\tcopypasta = true;","\t\t\t\t\t","\t\t\t\t\tvar mx, my;","\t\t\t\t\tfor (var i in selected)","\t\t\t\t\t{","\t\t\t\t\t\tvar sp = selected[i];","\t\t\t\t\t\t","\t\t\t\t\t\tif (typeof mx == \"undefined\")","\t\t\t\t\t\t\tmx = sp.x;","\t\t\t\t\t\telse","\t\t\t\t\t\t\tmx = Math.min(mx, sp.x);","\t\t\t\t\t\tif (typeof my == \"undefined\")","\t\t\t\t\t\t\tmy = sp.y;","\t\t\t\t\t\telse","\t\t\t\t\t\t\tmy = Math.min(my, sp.y);","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t\tfor (var i in selected)","\t\t\t\t\t{","\t\t\t\t\t\tvar sp = selected[i];","\t\t\t\t\t\tvar nsp = new Sprite({ x:sp.x, y:sp.y, width:sp.width, height:sp.height, texture:new Texture({ texturePack:sp.texture.texturePack, animation:sp.texture.animation, frame:{ current:0, counter:0, interval:sp.texture.frame.interval }, flipX:sp.texture.flipX, flipY:sp.texture.flipY, rotation:sp.texture.rotation }), type:sp.type });","\t\t\t\t\t\tnsp.description = sp.description;","\t\t\t\t\t\tnsp.attributes = [];","\t\t\t\t\t\tvar attrs = sp.attributes || [];","\t\t\t\t\t\t","\t\t\t\t\t\tfor (var j = 0; j < attrs.length; j++)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tvar n = attrs[j];","\t\t\t\t\t\t\tnsp.attributes[j] = n;","\t\t\t\t\t\t\tif (n.replace(/x|y/g, \"\") != \"\")","\t\t\t\t\t\t\t\tnsp[n] = sp[n];","\t\t\t\t\t\t}","\t\t\t\t\t\t","\t\t\t\t\t\tnsp.x = nsp.x - mx + nmouse.x;","\t\t\t\t\t\tnsp.y = nsp.y - my + nmouse.y;","\t\t\t\t\t\t","\t\t\t\t\t\tnsp.x = mod(nsp.x);","\t\t\t\t\t\tnsp.y = mod(nsp.y);","\t\t\t\t\t\tif (sp.isBlock)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tnsp.orig = { x:nsp.x, y:nsp.y };","\t\t\t\t\t\t\tnsp.isBlock = true;","\t\t\t\t\t\t\tbset(nsp.x / bs, nsp.y / bs, nsp);","\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t\tgame.sprites.add(nsp);","\t\t\t\t\t\tselected[i] = nsp;","\t\t\t\t\t}","\t\t\t\t\tif (selected.length == 1 && selected[0].isBlock)","\t\t\t\t\t{","\t\t\t\t\t\tganim = selected[0].texture.animation.slice(0);","\t\t\t\t\t\tgfx = selected[0].texture.flipX;","\t\t\t\t\t\tgfy = selected[0].texture.flipY;","\t\t\t\t\t\tgrot = selected[0].texture.rotation;","\t\t\t\t\t\tselected = [];","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse if (getMouseUp(3) && (mouse.x == mouse.pressed.x && mouse.y == mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\tif (copypasta)","\t\t\t\t\t\tcopypasta = false;","\t\t\t\t\telse","\t\t\t\t\t{","\t\t\t\t\t\tselected = [];","\t\t\t\t\t\tvar pack = game.texturePacks.get(getCurrentTextureIndex());","\t\t\t\t\t\tvar span = mod(pack.image.width) / bs + 1;","\t\t\t\t\t\tvar ty = pack.map[ganim[1] / bs * span + ganim[0] / bs];","\t\t\t\t\t\t","\t\t\t\t\t\tvar b = addBlock({ x:mod(nmouse.x) / bs, y:mod(nmouse.y) / bs, texture:new Texture({ texturePack:pack, animation:ganim, flipX:gfx, flipY:gfy, rotation:grot }), type:ty });","\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tfor (var i = game.sprites.values.length - 1; i >= 0; i--)","\t\t\t\t{","\t\t\t\t\tvar sp = game.sprites.values[i];","\t\t\t\t\tif (nmouse.x >= sp.x && nmouse.x <= sp.x + sp.width && nmouse.y >= sp.y && nmouse.y <= sp.y + sp.height)","\t\t\t\t\t{","\t\t\t\t\t\tdselect = true;","\t\t\t\t\t\t","\t\t\t\t\t\tif (getMouseDown(1))","\t\t\t\t\t\t{","\t\t\t\t\t\t\tif (isKeyDown(keys.control))","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tif (selected.indexOf(sp) == -1)","\t\t\t\t\t\t\t\t\tselected.push(sp);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse if (selected.length <= 1 || selected.indexOf(sp) == -1)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tselected = [sp];","\t\t\t\t\t\t\t\tlaston = true;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t","\t\t\t\t\t\t\tif (sp.texture.texturePack)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\ttps.value = sp.texture.texturePack.src;","\t\t\t\t\t\t\t\tctp = sp.texture.texturePack.src;","\t\t\t\t\t\t\t\tganim = sp.texture.animation;","\t\t\t\t\t\t\t\tgfx = sp.texture.flipX;","\t\t\t\t\t\t\t\tgfy = sp.texture.flipY;","\t\t\t\t\t\t\t\tgrot = sp.texture.rotation;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t\thovers = [{ x:sp.x, y:sp.y, width:sp.width, height:sp.height, color:\"rgba(70, 70, 255, .3)\" }];","\t\t\t\t\t\tif (sp.texture.type == \"texture\")","\t\t\t\t\t\t\tgame.mc.title = sp.type + \"<\" + sp.x + \", \" + sp.y + \">\" + (typeof sp.description == \"string\" ? \"\\n\" + sp.description : \"\") + \"\\nTextureSource: \" + sp.texture.texturePack.src + \"\\nTextureAnimation: \" + arrtostr(sp.texture.animation);","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tvar mp = game.untransform(mouse.pressed);","\t\t\t\tif (selected.length == 0 && mouse.isDown && mouse.pressed.which == 3 && (mouse.x != mouse.pressed.x || mouse.y != mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\tvar a = mod(mp.x); var b = mod(mp.y);","\t\t\t\t\tvar c = mod(nmouse.x); var d = mod(nmouse.y);","\t\t\t\t\t","\t\t\t\t\tif (c < a)","\t\t\t\t\t{","\t\t\t\t\t\tvar temp = c;","\t\t\t\t\t\tc = a;","\t\t\t\t\t\ta = temp;","\t\t\t\t\t}","\t\t\t\t\tif (d < b)","\t\t\t\t\t{","\t\t\t\t\t\tvar temp = d;","\t\t\t\t\t\td = b;","\t\t\t\t\t\tb = temp;","\t\t\t\t\t}","\t\t\t\t\tc += bs;","\t\t\t\t\td += bs;","\t\t\t\t\tvar tp = game.texturePacks.get(getCurrentTextureIndex());","\t\t\t\t\t","\t\t\t\t\tfor (var x = a; x < c; x += bs)","\t\t\t\t\t\tfor (var y = b; y < d; y += bs)","\t\t\t\t\t\t\thovers.push({ x:x, y:y, width:bs, height:bs, image:tp.image, sx:ganim[0], sy:ganim[1], sw:ganim[2], sh:ganim[3] });","\t\t\t\t}","\t\t\t\telse if (selected.length == 0 && getMouseUp(3) && (mouse.x != mouse.pressed.x || mouse.y != mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\tvar a = mod(mp.x); var b = mod(mp.y);","\t\t\t\t\tvar c = mod(nmouse.x); var d = mod(nmouse.y);","\t\t\t\t\t","\t\t\t\t\tif (c < a)","\t\t\t\t\t{","\t\t\t\t\t\tvar temp = c;","\t\t\t\t\t\tc = a;","\t\t\t\t\t\ta = temp;","\t\t\t\t\t}","\t\t\t\t\tif (d < b)","\t\t\t\t\t{","\t\t\t\t\t\tvar temp = d;","\t\t\t\t\t\td = b;","\t\t\t\t\t\tb = temp;","\t\t\t\t\t}","\t\t\t\t\tc += bs;","\t\t\t\t\td += bs;","\t\t\t\t\tvar tp = game.texturePacks.get(getCurrentTextureIndex());","\t\t\t\t\tselected = [];","\t\t\t\t\t","\t\t\t\t\tvar span = mod(tp.image.width) / bs + 1;","\t\t\t\t\tvar ty = tp.map[ganim[1] / bs * span + ganim[0] / bs];","\t\t\t\t\t","\t\t\t\t\tfor (var x = a; x < c; x += bs)","\t\t\t\t\t\tfor (var y = b; y < d; y += bs)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tvar bl = addBlock({ x:x / bs, y:y / bs, texture:new Texture({ texturePack:tp, animation:ganim, flipX:gfx, flipY:gfy, rotation:grot }), type:ty });","\t\t\t\t\t\t\tbl.isBlock = true;","\t\t\t\t\t\t\tbl.orig = { x:bl.x, y:bl.y };","\t\t\t\t\t\t\tselected.push(bl);","\t\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse if (!dselect)","\t\t\t\t{","\t\t\t\t\tvar b = bget( mod(nmouse.x) / bs, mod(nmouse.y) / bs );","\t\t\t\t\tif (b instanceof Sprite)","\t\t\t\t\t{","\t\t\t\t\t\tdselect = true;","\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\t","\t\t\t\t\t\tif (getMouseDown(1))","\t\t\t\t\t\t{","\t\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\t\tif (isKeyDown(keys.control))","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tif (selected.indexOf(b) == -1)","\t\t\t\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse if (selected.length <= 1 || selected.indexOf(b) == -1)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tselected = [b];","\t\t\t\t\t\t\t\tlaston = false;","\t\t\t\t\t\t\t\taddBlockAttribs();","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t","\t\t\t\t\t\t\ttps.value = b.texture.texturePack.src;","\t\t\t\t\t\t\tctp = b.texture.texturePack.src;","\t\t\t\t\t\t\tganim = b.texture.animation;","\t\t\t\t\t\t\tgfx = b.texture.flipX;","\t\t\t\t\t\t\tgfy = b.texture.flipY;","\t\t\t\t\t\t\tgrot = b.texture.rotation;","\t\t\t\t\t\t}","\t\t\t\t\t\telse if (!mouse.isDown)","\t\t\t\t\t\t\thovers = [{ x:b.x, y:b.y, width:b.width, height:b.height, color:\"rgba(70, 70, 255, .3)\" }];","\t\t\t\t\t\t","\t\t\t\t\t\tgame.mc.title = b.type.toLowerCase() + \"<\" + b.x + \", \" + b.y + \">\\nTextureSource: \" + b.texture.texturePack.src + \"\\nTextureAnimation: \" + arrtostr(b.texture.animation);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tif (!dselect)","\t\t\t\t{","\t\t\t\t\tgame.mc.title = \"\";","\t\t\t\t\tif (getMouseDown(1) && cursorInBounds())","\t\t\t\t\t{","\t\t\t\t\t\tif (selected.length != 0)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tfor (var i in selected)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tvar s = selected[i];","\t\t\t\t\t\t\t\tif (!s.isBlock)","\t\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\t\tganim = [0, 0, bs, bs];","\t\t\t\t\t\t\t\t\tgfx = false;","\t\t\t\t\t\t\t\t\tgfy = false;","\t\t\t\t\t\t\t\t\tgrot = 0;","\t\t\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\tselected = [];","\t\t\t\t\t\t\tclearAttributes();","\t\t\t\t\t\t\tctp = tps.value;","\t\t\t\t\t\t\t","\t                        var tex = getTexturePack(ctp);","\t                        if (tex)","\t                        {","\t                            var img = tex.image;","\t                            for (var i = 0; i < ganim.length; i += 4)","\t                            {","\t                                if (ganim[i] + ganim[i + 2] > img.width || ganim[i + 1] + ganim[i + 3] > img.height)","\t                                {","\t                                    ganim = [0, 0, bs, bs];","\t                                    break;","\t                                }","\t                            }","\t                        }","\t\t\t\t\t\t}","\t\t\t\t\t\t","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tvar pt = game.untransform(mouse.pressed);","\t\t\t\tif (selected.length == 0 && mouse.isDown && mouse.pressed.which == 1 && (mouse.x != mouse.pressed.x || mouse.y != mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\thovers.push({ x:pt.x, y:pt.y, width:nmouse.x - pt.x, height:nmouse.y - pt.y, borderColor:\"darkgray\", color:\"rgba(170, 170, 170, .3)\" });","\t\t\t\t}","\t\t\t\telse if (selected.length == 0 && getMouseUp(1) && (mouse.x != mouse.pressed.x || mouse.y != mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\tvar ta = Math.min(pt.x, nmouse.x);","\t\t\t\t\tvar tb = Math.min(pt.y, nmouse.y);","\t\t\t\t\tvar tc = Math.max(pt.x, nmouse.x);","\t\t\t\t\tvar td = Math.max(pt.y, nmouse.y);","\t\t\t\t\tvar r = { x:ta, y:tb, width:tc - ta, height:td - tb, color:\"rgba(170, 170, 170, .5)\" };","\t\t\t\t\t","\t\t\t\t\tselected = [];","\t\t\t\t\tfor (var i in game.sprites.values)","\t\t\t\t\t{","\t\t\t\t\t\tvar sp = game.sprites.values[i];","\t\t\t\t\t\tif (r.x + r.width >= sp.x && r.x <= sp.x + sp.width && r.y + r.height >= sp.y && r.y <= sp.y + sp.height)","\t\t\t\t\t\t\tselected.push(sp);","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t\tvar b;","\t\t\t\t\tfor (var x = mod(r.x); x < r.x + r.width; x += bs)","\t\t\t\t\t{","\t\t\t\t\t\tfor (var y = mod(r.y); y < r.y + r.height; y += bs)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tb = bget(x / bs, y / bs);","\t\t\t\t\t\t\tif (b && selected.indexOf(b) == -1)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tfor (var x = mod(r.x); x < r.x + r.width; x += bs)","\t\t\t\t\t{","\t\t\t\t\t\tb = bget(x / bs, mod(r.y + r.height) / bs);","\t\t\t\t\t\tif (b && selected.indexOf(b) == -1)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tfor (var y = mod(r.y); y < r.y + r.height; y += bs)","\t\t\t\t\t{","\t\t\t\t\t\tb = bget(mod(r.x + r.width) / bs, y / bs);","\t\t\t\t\t\tif (b && selected.indexOf(b) == -1)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tb = bget(mod(r.x + r.width) / bs, mod(r.y + r.height) / bs);","\t\t\t\t\tif (b && selected.indexOf(b) == -1)","\t\t\t\t\t{","\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t}","\t\t}","\t}","\tif (getMouseUp())","\t\tresizingCamera = { x:false, y:false, width:false, height:false };","\t","\tif (selected.length > 0)","\t{","\t\tif (getMouseUp())","\t\t{","\t\t\tfor (var i in selected)","\t\t\t{","\t\t\t\tvar sp = selected[i];","\t\t\t\tif (sp.isBlock)","\t\t\t\t{","\t\t\t\t\tbset(sp.orig.x / bs, sp.orig.y / bs, null);","\t\t\t\t\tsp.orig = { x:sp.x, y:sp.y };","\t\t\t\t}","\t\t\t}","\t\t\tfor (var i in selected)","\t\t\t{","\t\t\t\tvar sp = selected[i];","\t\t\t\tif (sp.isBlock)","\t\t\t\t\tbset(sp.x / bs, sp.y / bs, sp);","\t\t\t}","\t\t\tresizingCamera = { x:false, y:false, width:false, height:false };","\t\t}","\t\telse","\t\t{","\t\t\tif (selected.length == 1 && laston)","\t\t\t{","\t\t\t\tclearAttributes();","\t\t\t\tvar s = selected[0];","\t\t\t\tif (!s.isBlock)","\t\t\t\t{","\t\t\t\t\tfor (var i in s.attributes)","\t\t\t\t\t\taddAttribute(selected[0], s.attributes[i]);","\t\t\t\t}","\t\t\t}","\t\t\t","\t\t\tvar kx = getKeyDown(keys.x);","\t\t\tvar ky = getKeyDown(keys.y);","\t\t\tvar kr = getKeyDown(keys.r);","\t\t\t","\t\t\tfor (var i in selected)","\t\t\t{","\t\t\t\tvar sp = selected[i];","\t\t\t\tvar ms = bs;","\t\t\t\tif (kx)","\t\t\t\t{","\t\t\t\t\tsp.texture.flipX = sp.texture.flipX ? false : true;","\t\t\t\t\tgfx = sp.texture.flipX;","\t\t\t\t}","\t\t\t\tif (ky)","\t\t\t\t{","\t\t\t\t\tsp.texture.flipY = sp.texture.flipY ? false : true;","\t\t\t\t\tgfy = sp.texture.flipY;","\t\t\t\t}","\t\t\t\tif (kr)","\t\t\t\t{","\t\t\t\t\tsp.texture.rotation = (sp.texture.rotation + 90) % 360;","\t\t\t\t\tgrot = sp.texture.rotation;","\t\t\t\t}","\t\t\t\t","\t\t\t\tif (!sp.isBlock)","\t\t\t\t{","\t\t\t\t\tif (mouse.isDown && mouse.pressed.which == 1 && keydowns.length == 0 && !isKeyDown(keys.space) && !isKeyDown(keys.s))","\t\t\t\t\t{","\t\t\t\t\t\tif (sp.width % bs == 0 && sp.height % bs == 0)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tsp.x += mod(nmouse.x) - mod(lnmouse.x);","\t\t\t\t\t\t\tsp.y += mod(nmouse.y) - mod(lnmouse.y);","\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t{","\t\t\t\t\t\t\tsp.x += nmouse.x - lnmouse.x;","\t\t\t\t\t\t\tsp.y += nmouse.y - lnmouse.y;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\telse if (getKeyDown(keys.left))","\t\t\t\t\t\tsp.x -= ms;","\t\t\t\t\telse if (getKeyDown(keys.right))","\t\t\t\t\t\tsp.x += ms;","\t\t\t\t\telse if (getKeyDown(keys.up))","\t\t\t\t\t\tsp.y -= ms;","\t\t\t\t\telse if (getKeyDown(keys.down))","\t\t\t\t\t\tsp.y += ms;","\t\t\t\t}","\t\t\t\telse","\t\t\t\t{","\t\t\t\t\tif (mouse.isDown && mouse.pressed.which == 1 && !isKeyDown(keys.space) && !isKeyDown(keys.s))","\t\t\t\t\t{","\t\t\t\t\t\tif (selected.length == 1)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tsp.x = mod(nmouse.x);","\t\t\t\t\t\t\tsp.y = mod(nmouse.y);","\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t{","\t\t\t\t\t\t\tsp.x += mod(nmouse.x) - mod(lnmouse.x);","\t\t\t\t\t\t\tsp.y += mod(nmouse.y) - mod(lnmouse.y);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\thovers.push({ x:sp.x, y:sp.y, width:sp.width, height:sp.height, color:\"rgba(255, 150, 150, .3)\" });","\t\t\t}","\t\t}","\t}","}","","function drawn()","{","\tvar t, ut;","\tfor (var i in hovers)","\t{","\t\tvar h = hovers[i];","\t\tif (h.color)","\t\t{","\t\t\tt = game.transform(h.x, h.y)","\t\t\tgame.ctx.fillStyle = h.color;","\t\t\tgame.ctx.strokeStyle = h.borderColor || h.color;","\t\t\t","\t\t\tgame.ctx.fillRect(t.x, t.y, h.width * game.camera.scale.x, h.height * game.camera.scale.y);","\t\t\tgame.ctx.strokeRect(t.x, t.y, h.width * game.camera.scale.x, h.height * game.camera.scale.y);","\t\t}","\t\telse if (h.image)","\t\t{","\t\t\tt = game.transform(h.x, h.y);","\t\t\tif (typeof h.sx == \"number\")","\t\t\t\tgame.ctx.drawImage( h.image, h.sx, h.sy, h.sw, h.sh, t.x, t.y,  h.width * game.camera.scale.x, h.height * game.camera.scale.y);","\t\t\telse","\t\t\t\tgame.ctx.drawImage( h.image, t.x, t.y, h.width * game.camera.scale.x, h.height * game.camera.scale.y );","\t\t}","\t}","\t","\t/*game.ctx.beginPath();","\tgame.ctx.lineWidth = 1;","\tgame.ctx.strokeStyle = \"lightgray\";","\t","\tt = game.transform(0, 0);","\tgame.ctx.moveTo( t.x, 0 );","\tgame.ctx.lineTo( t.x, game.mc.height );","\t","\tgame.ctx.moveTo( 0, t.y );","\tgame.ctx.lineTo( game.mc.width, t.y );","\t","\tgame.ctx.stroke();*/","\tif (!camBounds)","\t\treturn;","\tgame.ctx.beginPath();","\tgame.ctx.lineWidth = 2;","\tgame.ctx.strokeStyle = \"red\";","\t","\tt = game.transform(camBounds.x, camBounds.y);","\tgame.ctx.strokeRect( t.x, t.y, camBounds.width * game.camera.scale.x, camBounds.height * game.camera.scale.y );","\t","\tt = game.transform(camBounds.x + camBounds.width, camBounds.y + camBounds.height);","\tvar et = game.transform(camBounds.x, camBounds.y);","\tut = game.untransform(camBounds.x - camBounds.width, camBounds.y - camBounds.height);","\t","\tgame.ctx.fillStyle = \"black\";","\tgame.ctx.fillRect( 0, 0, et.x, game.mc.height );","\tgame.ctx.fillRect( t.x, 0, game.mc.width - ut.x, game.mc.height );","\t","\tgame.ctx.fillRect( 0, 0, game.mc.width, et.y );","\tgame.ctx.fillRect( 0, t.y, game.mc.width, game.mc.height - ut.y );","\t","\tt = game.transform(-game.mc.width / 2, -game.mc.height / 2);","\tgame.ctx.strokeStyle = \"blue\";","\tgame.ctx.strokeRect( t.x, t.y, game.mc.width * game.camera.scale.x, game.mc.height * game.camera.scale.y );","}","","function updateTexturePacks()","{","\ttps.innerHTML = \"\";","\tfor (var i in game.texturePacks.values)","\t{","\t\tvar tp = game.texturePacks.values[i];","\t\tif (tp.image)","\t\t{","\t\t\tvar op = document.createElement(\"option\");","\t\t\top.innerHTML = tp.src;","\t\t\ttps.appendChild(op);","\t\t}","\t}","}","","// Helper/Other","function clearInput()","{","\tmouse.isDown = false;","\tselected = [];","\tkeydowns = [];","}","function cursorInBounds()","{","\treturn mouse.x >= 0 && mouse.x <= game.mc.width && mouse.y >= 0 && mouse.y <= game.mc.height;","}","","function rand(max)","{","\treturn Math.floor(Math.random() * max);","}","function chooseRandomSong()","{","\tcurrentSong = bgmusic[rand(bgmusic.length)];","\tcurrentSong.play();","}","","// Properties","var aa = {};","function clearAttributes()","{","\taa = {};","\tattribs.innerHTML = \"\";","}","","function addAttribute(o, n, op)","{","\tn = \"\" + n;","\tvar v = o[n];","\t","\taa[n] = v;","\tvar np = document.createElement(\"div\");","\tvar pn = document.createElement(\"label\");","\tvar pv = document.createElement(\"label\");","\tpn.style[\"font-weight\"] = \"bold\";","\tpn.innerHTML = n + \": \";","\t","\tvar ni = document.createElement(\"input\");","\t","\tif (typeof op != \"undefined\")","\t{","\t\tni = document.createElement(\"select\");","\t\tif (op.indexOf(n) == -1)","\t\t\top.push(n);","\t\tfor (var i in op)","\t\t{","\t\t\tvar o = document.createElement(\"option\");","\t\t\to.innerHTML = op[i];","\t\t\tni.appendChild(o);","\t\t}","\t\tni.value = v;","\t}","\telse","\t{","\t\tif (typeof v == \"boolean\")","\t\t{","\t\t\tni = document.createElement(\"select\");","\t\t\tvar to = document.createElement(\"option\");","\t\t\tvar fo = document.createElement(\"option\");","\t\t\t","\t\t\tto.innerHTML = \"true\";","\t\t\tfo.innerHTML = \"false\";","\t\t\tni.appendChild(to);","\t\t\tni.appendChild(fo);","\t\t\t","\t\t\tni.value = \"\" + v;","\t\t\tni.onchange = function()","\t\t\t{","\t\t\t\tvar a = JSON.parse(ni.value);","\t\t\t\taa[n] = a;","\t\t\t\to[n] = a;","\t\t\t}","\t\t}","\t\telse if (v instanceof Array)","\t\t{","\t\t\tni.value = arrtostr(v);","\t\t\tni.onchange = function()","\t\t\t{","\t\t\t\tvar a = strtoarr(ni.value.replace(/ /g, \"\"));","\t\t\t\taa[n] = a;","\t\t\t\to[n] = a;","\t\t\t}","\t\t}","\t\telse if (typeof v == \"string\" || typeof v == \"number\")","\t\t{","\t\t\tni.value = v;","\t\t\tif (typeof v == \"number\")","\t\t\t\tni.type = \"number\";","\t\t\t","\t\t\tni.onchange = function()","\t\t\t{","\t\t\t\tif (ni.type == \"number\")","\t\t\t\t{","\t\t\t\t\taa[n] = +ni.value;","\t\t\t\t\to[n] = +ni.value;","\t\t\t\t}","\t\t\t\telse","\t\t\t\t{","\t\t\t\t\taa[n] = ni.value;","\t\t\t\t\to[n] = ni.value;","\t\t\t\t}","\t\t\t}","\t\t}","\t}","\t","\tpv.appendChild(ni);","\tnp.appendChild(pn);","\tnp.appendChild(pv);","\tattribs.appendChild(np);","}","","function addLabel(s)","{","\tvar d = document.createElement(\"div\");","\tvar b = document.createElement(\"b\");","\tb.innerHTML = b;","\t","\td.appendChild(b);","\tattribs.appendChild(d);","}","","function getAttribute(n)","{","\treturn aa[n];","}","","function addBlockAttribs()","{","\tvar pack = game.texturePacks.get(getCurrentTextureIndex());","\t","\tclearAttributes();","\tvar c = document.createElement(\"canvas\");","\tvar sf = 2;","\tc.width = bs * sf;","\tc.height = bs * sf;","\t","\tvar ctx = c.getContext(\"2d\");","\tctx.imageSmoothingEnabled = false;","\tattribs.appendChild(c);","\tattribs.appendChild(document.createElement(\"br\"));","\tctx.drawImage(pack.image, ganim[0], ganim[1], ganim[2], ganim[3], 0, 0, c.width, c.height);","\t","\tvar xy = { x:ganim[0] / bs, y:ganim[1] / bs };","\tvar span = mod(pack.image.width) / bs + 1;","\tif (typeof pack.map[xy.y * span + xy.x] == \"undefined\")","\t\tpack.map[xy.y * span + xy.x] = \"solid\";","\t","\tvar s = document.createElement(\"select\");","\tfor (var i in BLOCK_TYPES)","\t{","\t\tvar op = document.createElement(\"option\");","\t\top.innerHTML = BLOCK_TYPES[i];","\t\ts.appendChild(op);","\t}","\ts.onchange = function()","\t{","\t\tpack.map[xy.y * span + xy.x] = s.value;","\t}","\t","\ts.value = pack.map[xy.y * span + xy.x];","\tvar nd = document.createElement(\"div\");","\tnd.innerHTML = \"<b>type: </b>\";","\tnd.appendChild(s);","\tattribs.appendChild(nd);","}","","function clearUp(a)","{","\tfor (var i = 0; i < a.length; i++)","\t{","\t\tif (typeof a[i] == \"undefined\")","\t\t\ta[i] = \"solid\";","\t}","\treturn a;","}","function getTextureMap()","{","\treturn arrtostr( clearUp( game.texturePacks.get(getCurrentTextureIndex()).map ) );","}"],"id":1},{"start":{"row":0,"column":0},"end":{"row":1394,"column":1},"action":"insert","lines":["// Edit.js","","CREATION_OPTIONS = { cancel:true };","var bgmusic = [];","var attribs;","","var selected = [], panSpeed = 20, ctp = \"\";","var hovers = [], tps;","var sc, sctx, scamera = { x:0, y:0 }, ganim = [], copypasta = false,","\tcamBounds, resizingCamera = { x:false, y:false, width:false, height:false };","","var ctexture, levelMusic, currentSong;","var spritetype, laston = false;","var ALL_OVERRIDE = true;","","var ewin;","","var BLOCK_TYPES = [\"blank\", \"ledge\", \"solid\", \"hurt\", \"kill\", \"vine\"],","\tSPRITE_TYPES = [\"koopa\"];","","var gfx = false, gfy = false, grot = 0;","","function importLevel(s, cb)","{","\tif (levelMusic instanceof Sound)","\t\tlevelMusic.stop();","\tclearGame();","\tblocks = [];","\t","\tvar lns = s.split(\"\\n\");","\tfor (var i in lns)","\t{","\t\tvar l = lns[i];","\t\tvar t = l.split(\" \");","\t\tswitch (t[0])","\t\t{","\t\t\tcase \"h_1\":","\t\t\t\tgame.camera.x = +t[1];","\t\t\t\tgame.camera.y = +t[2];","\t\t\t\tscamera.x = +t[3];","\t\t\t\tscamera.y = +t[4];","\t\t\t\tgame.camera.scale.x = +t[5];","\t\t\t\tgame.camera.scale.y = +t[6];","\t\t\t\tbreak;","\t\t\tcase \"h_2\":","\t\t\t\tcamBounds.x = +t[1];","\t\t\t\tcamBounds.y = +t[2];","\t\t\t\tcamBounds.width = +t[3];","\t\t\t\tcamBounds.height = +t[4];","\t\t\t\tbreak;","\t\t\tcase \"bg\":","\t\t\t\tgame.running.push(false);","\t\t\t\tbackground = new Texture({ type:\"texture\", texturePack:new TexturePack({ source:t[1], callback:function(){","\t\t\t\t\tgame.running.splice(game.running.indexOf(false), 1);","\t\t\t\t} }) });","\t\t\t\tbreak;","\t\t\tcase \"b\":","\t\t\t\tvar bx = +t[1] / bs;","\t\t\t\tvar by = +t[2] / bs;","\t\t\t\tvar tex = new Texture({ type:\"texture\", texturePack:game.texturePacks.get(+t[4]), animation:strtoarr(t[3]) });","\t\t\t\tvar b = addBlock({ x:bx, y:by, texture:tex, type:t[5] });","\t\t\t\tif (t.length > 6)","\t\t\t\t{","\t\t\t\t\tb.texture.flipX = JSON.parse(t[6]);","\t\t\t\t\tb.texture.flipY = JSON.parse(t[7]);","\t\t\t\t\tb.texture.rotation = JSON.parse(t[8]);","\t\t\t\t}","\t\t\t\tb.isBlock = true;","\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\tbreak;","\t\t\tcase \"s\":","\t\t\t\tvar sp = SPRITES[t[3]]({ x:+t[1], y:+t[2] });","\t\t\t\tvar props = t[4];","\t\t\t\t","\t\t\t\tif (props)","\t\t\t\t{","\t\t\t\t\tsp.attributes = [];","\t\t\t\t\tvar spl = props.substring(1, props.length - 1).split(\",\");","\t\t\t\t\t","\t\t\t\t\tif (spl.length == 1 && spl[0] != \"\" || spl.length > 1)","\t\t\t\t\t{","\t\t\t\t\t\tfor (var j in spl)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tvar p = spl[j];","\t\t\t\t\t\t\tvar nam = p.substring(0, p.indexOf(\":\"));","\t\t\t\t\t\t\t","\t\t\t\t\t\t\tvar val = JSON.parse( p.substring(p.indexOf(\":\") + 1) );","\t\t\t\t\t\t\tsp.attributes.push(nam);","\t\t\t\t\t\t\tsp[nam] = val;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tif (t.length > 5)","\t\t\t\t{","\t\t\t\t\tsp.texture.flipX = JSON.parse(t[5]);","\t\t\t\t\tsp.texture.flipY = JSON.parse(t[6]);","\t\t\t\t\tsp.texture.rotation = JSON.parse(t[7]);","\t\t\t\t}","\t\t\t\tgame.sprites.add(sp);","\t\t\t\tbreak;","\t\t\tcase \"m\":","\t\t\t\tif (levelMusic)","\t\t\t\t\tlevelMusic.stop();","\t\t\t\tlevelMusic = new Sound({ source:t[1], loop:true });","\t\t\t\tlevelMusic.play();","\t\t\t\tbreak;","\t\t}","\t}","\tif (typeof cb == \"function\")","\t\tcb();","}","function exportLevel()","{","\tvar s = \"\";","\ts += \"h_1 \" + game.camera.x + \" \" + game.camera.y + \" \" + scamera.x + \" \" + scamera.y + \" \" + game.camera.scale.x + \" \" + game.camera.scale.y + \"\\n\";","\ts += \"h_2 \" + camBounds.x + \" \" + camBounds.y + \" \" + camBounds.width + \" \" + camBounds.height + \"\\n\";","\ts += \"bg \" + background.texturePack.src + \"\\n\";","\tvar bs = \"\";","\tvar ps = [];","\tfor (var i in blocks)","\t{","\t\tvar b = blocks[i];","\t\tif (b instanceof Sprite){","\t\t\tif (ps.indexOf(b.texture.texturePack.image.src) == -1)","\t\t\t\tps.push(b.texture.texturePack.image.src);","\t\t\tbs += \"b \" + b.x + \" \" + b.y + \" \" + arrtostr(b.texture.animation) + \" \" + ps.indexOf(b.texture.texturePack.image.src) + \" \" + b.type.split(\" \")[0] + \" \" + b.texture.flipX + \" \" + b.texture.flipY + \" \" + b.texture.rotation + \"\\n\";","\t\t}","\t}","\tfor (var i in game.sprites.values)","\t{","\t\tvar sp = game.sprites.values[i];","\t\t","\t\tif (sp.texture.type == \"texture\")","\t\t\tbs += \"s \" + sp.x + \" \" + sp.y + \" \" + sp.type.split(\" \")[0] + \" {\";","\t\t\tvar a = sp.attributes;","\t\t\tif (a)","\t\t\t{","\t\t\t\tfor (var j in a)","\t\t\t\t{","\t\t\t\t\tbs += a[j] + \":\";","\t\t\t\t\tvar v = sp[a[j]];","\t\t\t\t\tif (typeof v == \"boolean\" || typeof v == \"number\")","\t\t\t\t\t\tbs += v;","\t\t\t\t\telse if (typeof v == \"string\")","\t\t\t\t\t\tbs += \"\\\"\" + v + \"\\\"\";","\t\t\t\t\telse if (v instanceof Array)","\t\t\t\t\t\tbs += arrtostr(v);","\t\t\t\t\tbs += \",\";","\t\t\t\t}","\t\t\t\tif (a.length > 0)","\t\t\t\t\tbs = bs.substring(0, bs.length - 1);","\t\t\t}","\t\t\tbs += \"} \" + sp.texture.flipX + \" \" + sp.texture.flipY + \" \" + sp.texture.rotation + \"\\n\";","\t}/*","\tfor (var i in ps)","\t\ts += \"p \" + ps[i] + \"\\n\";*/","\ts += bs;","\tif (typeof levelMusic != \"undefined\" && levelMusic instanceof Sound)","\t\ts += \"m \" + levelMusic.src + \"\\n\";","\treturn s;","}","function arrtostr(a)","{","\tif (a.length == 0)","\t\treturn \"[]\";","\tvar r = \"[\";","\tfor (var i = 0; i < a.length; i++)","\t{","\t\tvar v = a[i];","\t\tif (typeof v == \"string\")","\t\t\tr += \"\\\"\" + v + \"\\\"\";","\t\telse","\t\t\tr += v;","\t\tr += \",\";","\t}","\treturn r.substring(0, r.length - 1) + \"]\";","}","function strtoarr(s)","{","\ts = s.replace(/\\[|\\]/g, \"\");","\tvar sp = s.split(\",\");","\tfor (var i in sp)","\t\tsp[i] = +sp[i];","\treturn sp;","}","function download(name, text)","{","    var el = document.createElement(\"a\");","    document.body.appendChild(el);","    el.setAttribute(\"href\", \"data:text/plain;charset:utf-8,\" + encodeURIComponent(text));","    el.setAttribute(\"download\", name);","    el.click();","    document.body.removeChild(el);","}","","function doLoad()","{","\tbackground = new Texture({ texturePack:new TexturePack({ source:\"Edit/Backgrounds/woven.png\" }) });","\tcamBounds = { x:-game.mc.width / 2, y:-game.mc.height / 2, width:game.mc.width, height:game.mc.height };","\t","\tdocument.getElementById(\"bgchange\").onclick = function()","\t{","\t\tvar nf = prompt(\"Type in the name of the new background you would like to use (All backgrounds mentioned here are automatically assumed to be within the 'Backgrounds' folder):\");","\t\tif (nf)","\t\t{","\t\t\tif (nf.split(\".\").length == 1)","\t\t\t\tnf += \".png\";","\t\t\tvar tp = new TexturePack({ source:\"Backgrounds/\" + nf, callback:function(img){","\t\t\t\tif (img)","\t\t\t\t\tbackground = new Texture({ texturePack:tp });","\t\t\t} });","\t\t}","\t\tclearInput();","\t}","\tdocument.getElementById(\"changemusic\").onclick = function()","\t{","\t\tif (levelMusic instanceof Sound)","\t\t\tlevelMusic.pause();","\t\tvar nf = prompt(\"Please type the name of the music you would like to associate with this level (Music is assumed to be within the 'Music' folder) (Type 'none' to rid this level of its music)\");","\t\tif (nf)","\t\t{","\t\t\tif (nf.toLowerCase() == \"none\")","\t\t\t\tlevelMusic = undefined;","\t\t\telse","\t\t\t{","\t\t\t\tif (nf.split(\".\").length == 1)","\t\t\t\t\tnf += \".mp3\";","\t\t\t\tif (levelMusic)","\t\t\t\t\tlevelMusic.stop();","\t\t\t\tlevelMusic = new Sound({ source:\"Music/\" + nf, loop:true });","\t\t\t\tif (currentSong)","\t\t\t\t\tcurrentSong.pause();","\t\t\t\tlevelMusic.play();","\t\t\t}","\t\t}","\t\telse if (levelMusic)","\t\t\tlevelMusic.play();","\t}","\t","\tdocument.getElementById(\"togglemusic\").onclick = function()","\t{","\t\tif (levelMusic instanceof Sound)","\t\t{","\t\t\tif (levelMusic.audio.paused)","\t\t\t\tlevelMusic.play();","\t\t\telse","\t\t\t\tlevelMusic.pause();","\t\t}","\t}","\tdocument.getElementById(\"addsprite\").onclick = function()","\t{","\t\tvar ty = spritetype.value;","\t\tvar p = game.untransform(game.mc.width / 2, game.mc.height / 2);","\t\tvar sp = SPRITES[ty]({ x:p.x, y:p.y });","\t\t","\t\tif (sp.x < camBounds.x)","\t\t\tsp.x = camBounds.x + bs;","\t\tif (sp.x + sp.width > camBounds.x + camBounds.width)","\t\t\tsp.x = camBounds.x + camBounds.width - sp.width;","\t\tif (sp.y < camBounds.y)","\t\t\tsp.y = camBounds.y + bs;","\t\tif (sp.y + sp.height > camBounds.y + camBounds.height)","\t\t\tsp.y = camBounds.y + camBounds.height - sp.height;","\t\t","\t\tif (sp.width % bs == 0 && sp.height % bs == 0)","\t\t{","\t\t\tsp.x = mod(sp.x);","\t\t\tsp.y = mod(sp.y);","\t\t}","\t\t","\t\tif (typeof sp.priority != \"undefined\" && sp.priority == \"first\")","\t\t\tgame.sprites.addBefore(sp);","\t\telse","\t\t\tgame.sprites.add(sp);","\t}","\tdocument.getElementById(\"dgame\").onclick = function()","\t{","\t\tdownload(\"level.txt\", exportLevel());","\t}","\t","\tvar cdiv = document.createElement(\"div\");","\tcdiv.style.position = \"fixed\";","\tcdiv.style.left = \"0\";","\tcdiv.style.top = \"0\";","\tcdiv.style.right = \"0\";","\tcdiv.style.bottom = \"0\";","\tcdiv.style.background = \"black\";","\tcdiv.style.visibility = \"hidden\";","\tcdiv.style.opacity = \"0\";","\tcdiv.style.transition = \"opacity .5s\";","\t","\tdocument.body.appendChild(cdiv);","\t","\tvar ifr = document.createElement(\"iframe\");","\tifr.style.position = \"fixed\";","\tifr.width = 640;","\tifr.height = 480;","\tifr.style.border = \"none\";","\tifr.src = \"index.html\";","\tcdiv.appendChild(ifr);","\t","\tewin = ifr.contentWindow;","\tewin.DISABLE_SOUND = true;","\t","\tcdiv.onclick = function(){","\t\tcdiv.style.visibility = \"hidden\";","\t\tcdiv.style.opacity = \"0\";","\t\tewin.game.muteSounds = true;","\t\tgame.running.splice(game.running.indexOf(false), 1);","\t}","\t","\tfunction resized(){","\t\tifr.style.left = (window.innerWidth - ifr.width) / 2 + \"px\";","\t\tifr.style.top = (window.innerHeight - ifr.height) / 2 + \"px\";","\t}","\twindow.onresize = resized;","\tresized();","\t","\tdocument.getElementById(\"player\").onclick = function()","\t{","\t\tvar hasSpawnPoint = false;","\t\tfor (var i in game.sprites.values)","\t\t{","\t\t\tvar sp = game.sprites.values[i];","\t\t\tif (sp.type == \"spawnPoint\")","\t\t\t\thasSpawnPoint = true;","\t\t}","\t\tif (!hasSpawnPoint)","\t\t\treturn;","\t\t","\t\tewin.game.muteSounds = false;","\t\t","\t\tif (typeof levelMusic != \"undefined\" && levelMusic instanceof Sound)","\t\t\tlevelMusic.stop();","\t\t","\t\tewin.player.reset();","\t\tewin.addBuffer(EFFECTS.immediateBlack);","\t\t","\t\tcdiv.style.visibility = \"visible\";","\t\tgame.running.push(false);","\t\tcdiv.style.opacity = \"1\";","\t\tifr.focus();","\t\t","\t\tewin.readLevel(exportLevel(), function(){","\t\t\tewin.addBuffer(ewin.loadFunction);","\t\t\tewin.addBuffer(EFFECTS.fadeIn);","\t\t});","\t}","\t","\ttps = document.getElementById(\"texturePacks\");","\ttps.onchange = function()","\t{","\t\tctexture.animation = [0, 0, bs, bs];","\t}","\t","\tattribs = document.getElementById(\"attributes\");","\tupdateTexturePacks();","\tganim = [0, 0, bs, bs];","\t","\twindow.ondragover = function(e)","\t{","\t\te.preventDefault();","\t}","\twindow.ondrop = function(e)","\t{","\t\te.preventDefault();","\t\tvar f = e.dataTransfer.files[0];","\t\t","\t\taddBuffer(EFFECTS.fadeOut);","\t\taddBuffer(function(){","\t\t\tvar reader = new FileReader();","\t\t\treader.onload = function(){","\t\t\t\timportLevel(reader.result, function(){","\t\t\t\t\taddBuffer(EFFECTS.fadeIn);","\t\t\t\t});","\t\t\t}","\t\t\treader.readAsText(f);","\t\t});","\t}","\twindow.onblur = function()","\t{","\t\tif (levelMusic)","\t\t{","\t\t\tif (!levelMusic.audio.paused)","\t\t\t{","\t\t\t\tlevelMusic.pause();","\t\t\t\tlevelMusic.wasPlaying = true;","\t\t\t}","\t\t}","\t}","\twindow.onfocus = function()","\t{","\t\tif (levelMusic && levelMusic.wasPlaying)","\t\t{","\t\t\tlevelMusic.play();","\t\t\tlevelMusic.wasPlaying = false;","\t\t}","\t}","\t","\tspritetype = document.getElementById(\"spritetype\");","\tspritetype.innerHTML = \"\";","\t","\tfor (var i in SPRITES)","\t{","\t\tif (i != \"mario\")","\t\t{","\t\t\tvar op = document.createElement(\"option\");","\t\t\top.innerHTML = i;","\t\t\tspritetype.appendChild(op);","\t\t}","\t}","\t","\tsc = document.getElementById(\"chooser\");","\tsc.width = 500;","\tsc.height = 400;","\tsc.style.background = \"black\";","\tsctx = sc.getContext(\"2d\");","\tsctx.imageSmoothingEnabled = false;","\t","\tctp = tps.value;","}","function getCurrentTextureIndex()","{","\tfor (var i = 0; i < game.texturePacks.values.length; i++)","\t{","\t\tvar p = game.texturePacks.values[i];","\t\tvar img = p.image;","\t\tif (img)","\t\t\tif (p.src == tps.value)","\t\t\t\treturn i;","\t}","}","","function update()","{","\tif (ewin && ewin.game)","\t\tewin.game.muteSounds = !ewin.document.hasFocus();","\thovers = [];","\t","\tchoose();","\tinput();","\tclampCamera();","}","","function clampCamera()","{","\tvar lw = 2;","\tvar ta = game.untransform(0, 0);","\tif (!camBounds)","\t\treturn;","\tif (game.camera.x >= (camBounds.x + camBounds.width - lw) / game.camera.scale.x)","\t\tgame.camera.x = (camBounds.x + camBounds.width - lw) / game.camera.scale.x;","\tif (game.camera.y >= (camBounds.y + camBounds.height - lw) / game.camera.scale.y)","\t\tgame.camera.y = (camBounds.y + camBounds.height - lw) / game.camera.scale.y;","\t","\tif (game.camera.x + game.mc.width <= (camBounds.x + lw) / game.camera.scale.x)","\t\tgame.camera.x = (camBounds.x + lw) / game.camera.scale.x - game.mc.width;","\tif (game.camera.y + game.mc.height <= (camBounds.y + lw) / game.camera.scale.y)","\t\tgame.camera.y = (camBounds.y + lw) / game.camera.scale.y - game.mc.height;","}","","function choose()","{","\tif (!sc)","\t\treturn;","\tif (tps.value == \"\")","\t\ttps.value = tps.firstChild.innerHTML;","\tsc.width = sc.width;","\t","\tvar cind = getCurrentTextureIndex();","\tvar pack = game.texturePacks.get(cind);","\t","\tif (typeof pack.map == \"undefined\")","\t{","\t\tpack.map = [];","\t\tif (typeof MAPS[pack.src] != \"undefined\")","\t\t\tpack.map = MAPS[pack.src];","\t}","\t","\tif (cursorInChoose() && isKeyDown(keys.space))","\t{","\t\tsc.style.cursor = \"move\";","\t\tif (mouse.isDown)","\t\t{","\t\t\tscamera.x -= mouse.x - mouse.last.x;","\t\t\tscamera.y -= mouse.y - mouse.last.y;","\t\t\t","\t\t\tif (scamera.x < 0)","\t\t\t\tscamera.x = 0;","\t\t\tif (scamera.x > pack.image.width - 1)","\t\t\t\tscamera.x = pack.image.width - 1;","\t\t\tif (scamera.y < 0)","\t\t\t\tscamera.y = 0;","\t\t\tif (scamera.y > pack.image.height - 1)","\t\t\t\tscamera.y = pack.image.height - 1;","\t\t}","\t}","\telse if (cursorInChoose())","\t{","\t\tsc.style.cursor = \"default\";","\t\tvar smouse = { x:mouse.x + game.mc.offsetLeft - sc.offsetLeft, y:mouse.y + game.mc.offsetTop - sc.offsetTop };","\t\tvar cmouse = { x:smouse.x + scamera.x, y:smouse.y + scamera.y };","\t\t","\t\tif (mod(cmouse.x) < pack.image.width && mod(cmouse.y) < pack.image.height)","\t\t{","\t\t\tif (getMouseDown(1))","\t\t\t{","\t\t\t\tganim = [ mod(cmouse.x), mod(cmouse.y), bs, bs ];","\t\t\t\tlaston = false;","\t\t\t\tselected = [];","\t\t\t\taddBlockAttribs();","\t\t\t}","\t\t\telse if (getMouseDown(3))","\t\t\t\tganim.push( mod(cmouse.x), mod(cmouse.y), bs, bs );","\t\t\t","\t\t\tif (getMouseDown(1) || getMouseDown(3))","\t\t\t{","\t\t\t\tctp = tps.value;","\t\t\t\tgfx = false;","\t\t\t\tgfy = false;","\t\t\t\tgrot = 0;","\t\t\t}","\t\t}","\t\t","\t}","\t","\tif (ctp != tps.value)","\t\treturn;","\tsctx.drawImage( pack.image, -scamera.x, -scamera.y, pack.image.width, pack.image.height );","\tsctx.strokeStyle = \"red\";","\tsctx.lineWidth = 2;","\t","\tif (ctp == tps.value)","\t{","\t\tvar anim = ganim;","\t\tfor (var i = 0; i < anim.length; i += 4)","\t\t\tsctx.strokeRect( anim[i] - scamera.x, anim[i + 1] - scamera.y, anim[i + 2], anim[i + 3] );","\t}","}","","function cursorInChoose()","{","\tvar nmouse = { x:mouse.x + game.mc.offsetLeft - sc.offsetLeft, y:mouse.y + game.mc.offsetTop - sc.offsetTop };","\treturn nmouse.x >= 0 && nmouse.x <= sc.width && nmouse.y >= 0 && nmouse.y <= sc.height;","}","","function input()","{","\tif (document.activeElement != document.body)","\t\treturn;","\tvar dselect = false, nmouse = game.untransform(mouse), lnmouse = game.untransform(mouse.last);","\t","\tif (!attribs)","\t\treturn;","\tvar tbox = attribs.getBoundingClientRect();","\t","\tif (keydowns.length == 0)","\t{","\t\tvar lwx = 2 / game.camera.scale.x;","\t\tvar lwy = 2 / game.camera.scale.y;","\t\t","\t\tif (nmouse.x >= camBounds.x - lwx && nmouse.x <= camBounds.x + lwx)","\t\t{","\t\t\tgame.mc.style.cursor = \"w-resize\";","\t\t\tif (getMouseDown(1))","\t\t\t\tresizingCamera.x = true;","\t\t}","\t\telse if (nmouse.x >= camBounds.x + camBounds.width - lwx && nmouse.x <= camBounds.x + camBounds.width + lwx)","\t\t{","\t\t\tgame.mc.style.cursor = \"e-resize\";","\t\t\tif (getMouseDown(1))","\t\t\t\tresizingCamera.width = true;","\t\t}","\t\telse if (nmouse.y >= camBounds.y - lwy && nmouse.y <= camBounds.y + lwy)","\t\t{","\t\t\tgame.mc.style.cursor = \"n-resize\";","\t\t\tif (getMouseDown(1))","\t\t\t\tresizingCamera.y = true;","\t\t}","\t\telse if (nmouse.y >= camBounds.y + camBounds.height - lwy && nmouse.y <= camBounds.y + camBounds.height + lwy)","\t\t{","\t\t\tgame.mc.style.cursor = \"s-resize\";","\t\t\tif (getMouseDown(1))","\t\t\t\tresizingCamera.height = true;","\t\t}","\t\telse if (!(resizingCamera.x || resizingCamera.y || resizingCamera.width || resizingCamera.height))","\t\t\tgame.mc.style.cursor = \"default\";","\t}","\tif (resizingCamera.x || resizingCamera.y || resizingCamera.width || resizingCamera.height)","\t{","\t\tselected = [];","\t\tvar diff = { x:nmouse.x - lnmouse.x, y:nmouse.y - lnmouse.y };","\t\tvar rb = { right:camBounds.x + camBounds.width, bottom:camBounds.y + camBounds.height };","\t\t","\t\tif (resizingCamera.x)","\t\t{","\t\t\tif (rb.right - (camBounds.x + diff.x) >= game.mc.width && nmouse.x <= camBounds.x + camBounds.width - game.mc.width)","\t\t\t{","\t\t\t\tcamBounds.x += diff.x;","\t\t\t\tcamBounds.width -= diff.x;","\t\t\t}","\t\t}","\t\tif (resizingCamera.y)","\t\t{","\t\t\tif (rb.bottom - (camBounds.y + diff.y) >= game.mc.height && nmouse.y <= camBounds.y + camBounds.height - game.mc.height)","\t\t\t{","\t\t\t\tcamBounds.y += diff.y;","\t\t\t\tcamBounds.height -= diff.y;","\t\t\t}","\t\t}","\t\tif (resizingCamera.width)","\t\t{","\t\t\tif ((camBounds.width + diff.x) >= game.mc.width && nmouse.x >= camBounds.x + game.mc.width)","\t\t\t\tcamBounds.width += diff.x;","\t\t}","\t\tif (resizingCamera.height)","\t\t{","\t\t\tif ((camBounds.height + diff.y) >= game.mc.height && nmouse.y >= camBounds.y + game.mc.height)","\t\t\t\tcamBounds.height += diff.y;","\t\t}\t","\t}","\telse","\t{","\t\tif (getMouseDown() && !cursorInBounds() && !cursorInChoose() && mouse.x < tbox.left - game.mc.offsetLeft)","\t\t{","\t\t\tclearAttributes();","\t\t\tselected = [];","\t\t}","\t\tif (selected.length == 0)","\t\t{","\t\t\tif (isKeyDown(keys.left))","\t\t\t\tgame.camera.x -= panSpeed;","\t\t\tif (isKeyDown(keys.right))","\t\t\t\tgame.camera.x += panSpeed;","\t\t\tif (isKeyDown(keys.up))","\t\t\t\tgame.camera.y -= panSpeed;","\t\t\tif (isKeyDown(keys.down))","\t\t\t\tgame.camera.y += panSpeed;","\t\t}","\t\telse","\t\t{","\t\t\tif (getKeyDown(keys.delete) || getKeyDown(keys.back))","\t\t\t{","\t\t\t\tvar hs = false;","\t\t\t\tfor (var i in selected)","\t\t\t\t{","\t\t\t\t\tvar sp = selected[i];","\t\t\t\t\tif (sp.isBlock)","\t\t\t\t\t{","\t\t\t\t\t\tbset(sp.x / bs, sp.y / bs, null);","\t\t\t\t\t}","\t\t\t\t\telse","\t\t\t\t\t{","\t\t\t\t\t\tvar ind = game.sprites.values.indexOf(sp);","\t\t\t\t\t\tgame.sprites.values.splice(ind, 1);","\t\t\t\t\t\tgame.sprites.keys.splice(ind, 1);","\t\t\t\t\t\ths = true;","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t}","\t\t\t\t","\t\t\t\tif (hs)","\t\t\t\t{","\t\t\t\t\tgfx = false;","\t\t\t\t\tgfy = false;","\t\t\t\t\tgrot = 0;","\t\t\t\t\tganim = [0, 0, bs, bs];","\t\t\t\t}","\t\t\t\tctp = tps.value;","\t\t\t\tselected = [];","\t\t\t\tclearAttributes();","\t\t\t}","\t\t}","\t\t","\t\tif (isKeyDown(keys.space) && cursorInBounds())","\t\t{","\t\t\tgame.mc.style.cursor = \"move\";","\t\t\tif (mouse.isDown)","\t\t\t{","\t\t\t\tgame.camera.x -= nmouse.x - lnmouse.x;","\t\t\t\tgame.camera.y -= nmouse.y - lnmouse.y;","\t\t\t}","\t\t}","\t\telse if (isKeyDown(keys.s) && cursorInBounds())","\t\t{","\t\t\tgame.mc.style.cursor = \"crosshair\";","\t\t\tif (mouse.isDown)","\t\t\t{","\t\t\t\tgame.camera.scale.x -= (nmouse.y - lnmouse.y) / 100 * game.camera.scale.x;","\t\t\t\tif (game.camera.scale.x < .01)","\t\t\t\t\tgame.camera.scale.x = .01;","\t\t\t\t","\t\t\t\tgame.camera.scale.y = game.camera.scale.x;","\t\t\t}","\t\t}","\t\telse","\t\t{","\t\t\t//game.mc.style.cursor = \"default\";","\t\t\tif (cursorInBounds())","\t\t\t{","\t\t\t\t/*if (getMouseDown(3) && selected.length == 1 && selected[0].isBlock)","\t\t\t\t{","\t\t\t\t\tvar sp = selected[0];","\t\t\t\t\tganim = sp.texture.animation.slice(0);","\t\t\t\t\tselected = [];","\t\t\t\t}","\t\t\t\telse */if (getMouseDown(3) && selected.length > 0 || getMouseDown(3) && selected.length == 1 && !selected[0].isBlock)","\t\t\t\t{","\t\t\t\t\tcopypasta = true;","\t\t\t\t\t","\t\t\t\t\tvar mx, my;","\t\t\t\t\tfor (var i in selected)","\t\t\t\t\t{","\t\t\t\t\t\tvar sp = selected[i];","\t\t\t\t\t\t","\t\t\t\t\t\tif (typeof mx == \"undefined\")","\t\t\t\t\t\t\tmx = sp.x;","\t\t\t\t\t\telse","\t\t\t\t\t\t\tmx = Math.min(mx, sp.x);","\t\t\t\t\t\tif (typeof my == \"undefined\")","\t\t\t\t\t\t\tmy = sp.y;","\t\t\t\t\t\telse","\t\t\t\t\t\t\tmy = Math.min(my, sp.y);","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t\tfor (var i in selected)","\t\t\t\t\t{","\t\t\t\t\t\tvar sp = selected[i];","\t\t\t\t\t\tvar nsp = new Sprite({ x:sp.x, y:sp.y, width:sp.width, height:sp.height, texture:new Texture({ texturePack:sp.texture.texturePack, animation:sp.texture.animation, frame:{ current:0, counter:0, interval:sp.texture.frame.interval }, flipX:sp.texture.flipX, flipY:sp.texture.flipY, rotation:sp.texture.rotation }), type:sp.type });","\t\t\t\t\t\tnsp.description = sp.description;","\t\t\t\t\t\tnsp.attributes = [];","\t\t\t\t\t\tvar attrs = sp.attributes || [];","\t\t\t\t\t\t","\t\t\t\t\t\tfor (var j = 0; j < attrs.length; j++)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tvar n = attrs[j];","\t\t\t\t\t\t\tnsp.attributes[j] = n;","\t\t\t\t\t\t\tif (n.replace(/x|y/g, \"\") != \"\")","\t\t\t\t\t\t\t\tnsp[n] = sp[n];","\t\t\t\t\t\t}","\t\t\t\t\t\t","\t\t\t\t\t\tnsp.x = nsp.x - mx + nmouse.x;","\t\t\t\t\t\tnsp.y = nsp.y - my + nmouse.y;","\t\t\t\t\t\t","\t\t\t\t\t\tnsp.x = mod(nsp.x);","\t\t\t\t\t\tnsp.y = mod(nsp.y);","\t\t\t\t\t\tif (sp.isBlock)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tnsp.orig = { x:nsp.x, y:nsp.y };","\t\t\t\t\t\t\tnsp.isBlock = true;","\t\t\t\t\t\t\tbset(nsp.x / bs, nsp.y / bs, nsp);","\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t\tgame.sprites.add(nsp);","\t\t\t\t\t\tselected[i] = nsp;","\t\t\t\t\t}","\t\t\t\t\tif (selected.length == 1 && selected[0].isBlock)","\t\t\t\t\t{","\t\t\t\t\t\tganim = selected[0].texture.animation.slice(0);","\t\t\t\t\t\tgfx = selected[0].texture.flipX;","\t\t\t\t\t\tgfy = selected[0].texture.flipY;","\t\t\t\t\t\tgrot = selected[0].texture.rotation;","\t\t\t\t\t\tselected = [];","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse if (getMouseUp(3) && (mouse.x == mouse.pressed.x && mouse.y == mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\tif (copypasta)","\t\t\t\t\t\tcopypasta = false;","\t\t\t\t\telse","\t\t\t\t\t{","\t\t\t\t\t\tselected = [];","\t\t\t\t\t\tvar pack = game.texturePacks.get(getCurrentTextureIndex());","\t\t\t\t\t\tvar span = mod(pack.image.width) / bs + 1;","\t\t\t\t\t\tvar ty = pack.map[ganim[1] / bs * span + ganim[0] / bs];","\t\t\t\t\t\t","\t\t\t\t\t\tvar b = addBlock({ x:mod(nmouse.x) / bs, y:mod(nmouse.y) / bs, texture:new Texture({ texturePack:pack, animation:ganim, flipX:gfx, flipY:gfy, rotation:grot }), type:ty });","\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tfor (var i = game.sprites.values.length - 1; i >= 0; i--)","\t\t\t\t{","\t\t\t\t\tvar sp = game.sprites.values[i];","\t\t\t\t\tif (nmouse.x >= sp.x && nmouse.x <= sp.x + sp.width && nmouse.y >= sp.y && nmouse.y <= sp.y + sp.height)","\t\t\t\t\t{","\t\t\t\t\t\tdselect = true;","\t\t\t\t\t\t","\t\t\t\t\t\tif (getMouseDown(1))","\t\t\t\t\t\t{","\t\t\t\t\t\t\tif (isKeyDown(keys.control))","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tif (selected.indexOf(sp) == -1)","\t\t\t\t\t\t\t\t\tselected.push(sp);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse if (selected.length <= 1 || selected.indexOf(sp) == -1)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tselected = [sp];","\t\t\t\t\t\t\t\tlaston = true;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t","\t\t\t\t\t\t\tif (sp.texture.texturePack)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\ttps.value = sp.texture.texturePack.src;","\t\t\t\t\t\t\t\tctp = sp.texture.texturePack.src;","\t\t\t\t\t\t\t\tganim = sp.texture.animation;","\t\t\t\t\t\t\t\tgfx = sp.texture.flipX;","\t\t\t\t\t\t\t\tgfy = sp.texture.flipY;","\t\t\t\t\t\t\t\tgrot = sp.texture.rotation;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t\thovers = [{ x:sp.x, y:sp.y, width:sp.width, height:sp.height, color:\"rgba(70, 70, 255, .3)\" }];","\t\t\t\t\t\tif (sp.texture.type == \"texture\")","\t\t\t\t\t\t\tgame.mc.title = sp.type + \"<\" + sp.x + \", \" + sp.y + \">\" + (typeof sp.description == \"string\" ? \"\\n\" + sp.description : \"\") + \"\\nTextureSource: \" + sp.texture.texturePack.src + \"\\nTextureAnimation: \" + arrtostr(sp.texture.animation);","\t\t\t\t\t\tbreak;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tvar mp = game.untransform(mouse.pressed);","\t\t\t\tif (selected.length == 0 && mouse.isDown && mouse.pressed.which == 3 && (mouse.x != mouse.pressed.x || mouse.y != mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\tvar a = mod(mp.x); var b = mod(mp.y);","\t\t\t\t\tvar c = mod(nmouse.x); var d = mod(nmouse.y);","\t\t\t\t\t","\t\t\t\t\tif (c < a)","\t\t\t\t\t{","\t\t\t\t\t\tvar temp = c;","\t\t\t\t\t\tc = a;","\t\t\t\t\t\ta = temp;","\t\t\t\t\t}","\t\t\t\t\tif (d < b)","\t\t\t\t\t{","\t\t\t\t\t\tvar temp = d;","\t\t\t\t\t\td = b;","\t\t\t\t\t\tb = temp;","\t\t\t\t\t}","\t\t\t\t\tc += bs;","\t\t\t\t\td += bs;","\t\t\t\t\tvar tp = game.texturePacks.get(getCurrentTextureIndex());","\t\t\t\t\t","\t\t\t\t\tfor (var x = a; x < c; x += bs)","\t\t\t\t\t\tfor (var y = b; y < d; y += bs)","\t\t\t\t\t\t\thovers.push({ x:x, y:y, width:bs, height:bs, image:tp.image, sx:ganim[0], sy:ganim[1], sw:ganim[2], sh:ganim[3] });","\t\t\t\t}","\t\t\t\telse if (selected.length == 0 && getMouseUp(3) && (mouse.x != mouse.pressed.x || mouse.y != mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\tvar a = mod(mp.x); var b = mod(mp.y);","\t\t\t\t\tvar c = mod(nmouse.x); var d = mod(nmouse.y);","\t\t\t\t\t","\t\t\t\t\tif (c < a)","\t\t\t\t\t{","\t\t\t\t\t\tvar temp = c;","\t\t\t\t\t\tc = a;","\t\t\t\t\t\ta = temp;","\t\t\t\t\t}","\t\t\t\t\tif (d < b)","\t\t\t\t\t{","\t\t\t\t\t\tvar temp = d;","\t\t\t\t\t\td = b;","\t\t\t\t\t\tb = temp;","\t\t\t\t\t}","\t\t\t\t\tc += bs;","\t\t\t\t\td += bs;","\t\t\t\t\tvar tp = game.texturePacks.get(getCurrentTextureIndex());","\t\t\t\t\tselected = [];","\t\t\t\t\t","\t\t\t\t\tvar span = mod(tp.image.width) / bs + 1;","\t\t\t\t\tvar ty = tp.map[ganim[1] / bs * span + ganim[0] / bs];","\t\t\t\t\t","\t\t\t\t\tfor (var x = a; x < c; x += bs)","\t\t\t\t\t\tfor (var y = b; y < d; y += bs)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tvar bl = addBlock({ x:x / bs, y:y / bs, texture:new Texture({ texturePack:tp, animation:ganim, flipX:gfx, flipY:gfy, rotation:grot }), type:ty });","\t\t\t\t\t\t\tbl.isBlock = true;","\t\t\t\t\t\t\tbl.orig = { x:bl.x, y:bl.y };","\t\t\t\t\t\t\tselected.push(bl);","\t\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse if (!dselect)","\t\t\t\t{","\t\t\t\t\tvar b = bget( mod(nmouse.x) / bs, mod(nmouse.y) / bs );","\t\t\t\t\tif (b instanceof Sprite)","\t\t\t\t\t{","\t\t\t\t\t\tdselect = true;","\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\t","\t\t\t\t\t\tif (getMouseDown(1))","\t\t\t\t\t\t{","\t\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\t\tif (isKeyDown(keys.control))","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tif (selected.indexOf(b) == -1)","\t\t\t\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\telse if (selected.length <= 1 || selected.indexOf(b) == -1)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tselected = [b];","\t\t\t\t\t\t\t\tlaston = false;","\t\t\t\t\t\t\t\taddBlockAttribs();","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t","\t\t\t\t\t\t\ttps.value = b.texture.texturePack.src;","\t\t\t\t\t\t\tctp = b.texture.texturePack.src;","\t\t\t\t\t\t\tganim = b.texture.animation;","\t\t\t\t\t\t\tgfx = b.texture.flipX;","\t\t\t\t\t\t\tgfy = b.texture.flipY;","\t\t\t\t\t\t\tgrot = b.texture.rotation;","\t\t\t\t\t\t}","\t\t\t\t\t\telse if (!mouse.isDown)","\t\t\t\t\t\t\thovers = [{ x:b.x, y:b.y, width:b.width, height:b.height, color:\"rgba(70, 70, 255, .3)\" }];","\t\t\t\t\t\t","\t\t\t\t\t\tgame.mc.title = b.type.toLowerCase() + \"<\" + b.x + \", \" + b.y + \">\\nTextureSource: \" + b.texture.texturePack.src + \"\\nTextureAnimation: \" + arrtostr(b.texture.animation);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tif (!dselect)","\t\t\t\t{","\t\t\t\t\tgame.mc.title = \"\";","\t\t\t\t\tif (getMouseDown(1) && cursorInBounds())","\t\t\t\t\t{","\t\t\t\t\t\tif (selected.length != 0)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tfor (var i in selected)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tvar s = selected[i];","\t\t\t\t\t\t\t\tif (!s.isBlock)","\t\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\t\tganim = [0, 0, bs, bs];","\t\t\t\t\t\t\t\t\tgfx = false;","\t\t\t\t\t\t\t\t\tgfy = false;","\t\t\t\t\t\t\t\t\tgrot = 0;","\t\t\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\tselected = [];","\t\t\t\t\t\t\tclearAttributes();","\t\t\t\t\t\t\tctp = tps.value;","\t\t\t\t\t\t\t","\t                        var tex = getTexturePack(ctp);","\t                        if (tex)","\t                        {","\t                            var img = tex.image;","\t                            for (var i = 0; i < ganim.length; i += 4)","\t                            {","\t                                if (ganim[i] + ganim[i + 2] > img.width || ganim[i + 1] + ganim[i + 3] > img.height)","\t                                {","\t                                    ganim = [0, 0, bs, bs];","\t                                    break;","\t                                }","\t                            }","\t                        }","\t\t\t\t\t\t}","\t\t\t\t\t\t","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\tvar pt = game.untransform(mouse.pressed);","\t\t\t\tif (selected.length == 0 && mouse.isDown && mouse.pressed.which == 1 && (mouse.x != mouse.pressed.x || mouse.y != mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\thovers.push({ x:pt.x, y:pt.y, width:nmouse.x - pt.x, height:nmouse.y - pt.y, borderColor:\"darkgray\", color:\"rgba(170, 170, 170, .3)\" });","\t\t\t\t}","\t\t\t\telse if (selected.length == 0 && getMouseUp(1) && (mouse.x != mouse.pressed.x || mouse.y != mouse.pressed.y))","\t\t\t\t{","\t\t\t\t\tvar ta = Math.min(pt.x, nmouse.x);","\t\t\t\t\tvar tb = Math.min(pt.y, nmouse.y);","\t\t\t\t\tvar tc = Math.max(pt.x, nmouse.x);","\t\t\t\t\tvar td = Math.max(pt.y, nmouse.y);","\t\t\t\t\tvar r = { x:ta, y:tb, width:tc - ta, height:td - tb, color:\"rgba(170, 170, 170, .5)\" };","\t\t\t\t\t","\t\t\t\t\tselected = [];","\t\t\t\t\tfor (var i in game.sprites.values)","\t\t\t\t\t{","\t\t\t\t\t\tvar sp = game.sprites.values[i];","\t\t\t\t\t\tif (r.x + r.width >= sp.x && r.x <= sp.x + sp.width && r.y + r.height >= sp.y && r.y <= sp.y + sp.height)","\t\t\t\t\t\t\tselected.push(sp);","\t\t\t\t\t}","\t\t\t\t\t","\t\t\t\t\tvar b;","\t\t\t\t\tfor (var x = mod(r.x); x < r.x + r.width; x += bs)","\t\t\t\t\t{","\t\t\t\t\t\tfor (var y = mod(r.y); y < r.y + r.height; y += bs)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tb = bget(x / bs, y / bs);","\t\t\t\t\t\t\tif (b && selected.indexOf(b) == -1)","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tfor (var x = mod(r.x); x < r.x + r.width; x += bs)","\t\t\t\t\t{","\t\t\t\t\t\tb = bget(x / bs, mod(r.y + r.height) / bs);","\t\t\t\t\t\tif (b && selected.indexOf(b) == -1)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tfor (var y = mod(r.y); y < r.y + r.height; y += bs)","\t\t\t\t\t{","\t\t\t\t\t\tb = bget(mod(r.x + r.width) / bs, y / bs);","\t\t\t\t\t\tif (b && selected.indexOf(b) == -1)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tb = bget(mod(r.x + r.width) / bs, mod(r.y + r.height) / bs);","\t\t\t\t\tif (b && selected.indexOf(b) == -1)","\t\t\t\t\t{","\t\t\t\t\t\tb.isBlock = true;","\t\t\t\t\t\tb.orig = { x:b.x, y:b.y };","\t\t\t\t\t\tselected.push(b);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t}","\t\t}","\t}","\tif (getMouseUp())","\t\tresizingCamera = { x:false, y:false, width:false, height:false };","\t","\tif (selected.length > 0)","\t{","\t\tif (getMouseUp())","\t\t{","\t\t\tfor (var i in selected)","\t\t\t{","\t\t\t\tvar sp = selected[i];","\t\t\t\tif (sp.isBlock)","\t\t\t\t{","\t\t\t\t\tbset(sp.orig.x / bs, sp.orig.y / bs, null);","\t\t\t\t\tsp.orig = { x:sp.x, y:sp.y };","\t\t\t\t}","\t\t\t}","\t\t\tfor (var i in selected)","\t\t\t{","\t\t\t\tvar sp = selected[i];","\t\t\t\tif (sp.isBlock)","\t\t\t\t\tbset(sp.x / bs, sp.y / bs, sp);","\t\t\t}","\t\t\tresizingCamera = { x:false, y:false, width:false, height:false };","\t\t}","\t\telse","\t\t{","\t\t\tif (selected.length == 1 && laston)","\t\t\t{","\t\t\t\tclearAttributes();","\t\t\t\tvar s = selected[0];","\t\t\t\tif (!s.isBlock)","\t\t\t\t{","\t\t\t\t\tfor (var i in s.attributes)","\t\t\t\t\t\taddAttribute(selected[0], s.attributes[i]);","\t\t\t\t}","\t\t\t}","\t\t\t","\t\t\tvar kx = getKeyDown(keys.x);","\t\t\tvar ky = getKeyDown(keys.y);","\t\t\tvar kr = getKeyDown(keys.r);","\t\t\t","\t\t\tfor (var i in selected)","\t\t\t{","\t\t\t\tvar sp = selected[i];","\t\t\t\tvar ms = bs;","\t\t\t\tif (kx)","\t\t\t\t{","\t\t\t\t\tsp.texture.flipX = sp.texture.flipX ? false : true;","\t\t\t\t\tgfx = sp.texture.flipX;","\t\t\t\t}","\t\t\t\tif (ky)","\t\t\t\t{","\t\t\t\t\tsp.texture.flipY = sp.texture.flipY ? false : true;","\t\t\t\t\tgfy = sp.texture.flipY;","\t\t\t\t}","\t\t\t\tif (kr)","\t\t\t\t{","\t\t\t\t\tsp.texture.rotation = (sp.texture.rotation + 90) % 360;","\t\t\t\t\tgrot = sp.texture.rotation;","\t\t\t\t}","\t\t\t\t","\t\t\t\tif (!sp.isBlock)","\t\t\t\t{","\t\t\t\t\tif (mouse.isDown && mouse.pressed.which == 1 && keydowns.length == 0 && !isKeyDown(keys.space) && !isKeyDown(keys.s))","\t\t\t\t\t{","\t\t\t\t\t\tif (sp.width % bs == 0 && sp.height % bs == 0)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tsp.x += mod(nmouse.x) - mod(lnmouse.x);","\t\t\t\t\t\t\tsp.y += mod(nmouse.y) - mod(lnmouse.y);","\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t{","\t\t\t\t\t\t\tsp.x += nmouse.x - lnmouse.x;","\t\t\t\t\t\t\tsp.y += nmouse.y - lnmouse.y;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\telse if (getKeyDown(keys.left))","\t\t\t\t\t\tsp.x -= ms;","\t\t\t\t\telse if (getKeyDown(keys.right))","\t\t\t\t\t\tsp.x += ms;","\t\t\t\t\telse if (getKeyDown(keys.up))","\t\t\t\t\t\tsp.y -= ms;","\t\t\t\t\telse if (getKeyDown(keys.down))","\t\t\t\t\t\tsp.y += ms;","\t\t\t\t}","\t\t\t\telse","\t\t\t\t{","\t\t\t\t\tif (mouse.isDown && mouse.pressed.which == 1 && !isKeyDown(keys.space) && !isKeyDown(keys.s))","\t\t\t\t\t{","\t\t\t\t\t\tif (selected.length == 1)","\t\t\t\t\t\t{","\t\t\t\t\t\t\tsp.x = mod(nmouse.x);","\t\t\t\t\t\t\tsp.y = mod(nmouse.y);","\t\t\t\t\t\t}","\t\t\t\t\t\telse","\t\t\t\t\t\t{","\t\t\t\t\t\t\tsp.x += mod(nmouse.x) - mod(lnmouse.x);","\t\t\t\t\t\t\tsp.y += mod(nmouse.y) - mod(lnmouse.y);","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\t","\t\t\t\thovers.push({ x:sp.x, y:sp.y, width:sp.width, height:sp.height, color:\"rgba(255, 150, 150, .3)\" });","\t\t\t}","\t\t}","\t}","}","","function drawn()","{","\tvar t, ut;","\tfor (var i in hovers)","\t{","\t\tvar h = hovers[i];","\t\tif (h.color)","\t\t{","\t\t\tt = game.transform(h.x, h.y)","\t\t\tgame.ctx.fillStyle = h.color;","\t\t\tgame.ctx.strokeStyle = h.borderColor || h.color;","\t\t\t","\t\t\tgame.ctx.fillRect(t.x, t.y, h.width * game.camera.scale.x, h.height * game.camera.scale.y);","\t\t\tgame.ctx.strokeRect(t.x, t.y, h.width * game.camera.scale.x, h.height * game.camera.scale.y);","\t\t}","\t\telse if (h.image)","\t\t{","\t\t\tt = game.transform(h.x, h.y);","\t\t\tif (typeof h.sx == \"number\")","\t\t\t\tgame.ctx.drawImage( h.image, h.sx, h.sy, h.sw, h.sh, t.x, t.y,  h.width * game.camera.scale.x, h.height * game.camera.scale.y);","\t\t\telse","\t\t\t\tgame.ctx.drawImage( h.image, t.x, t.y, h.width * game.camera.scale.x, h.height * game.camera.scale.y );","\t\t}","\t}","\t","\t/*game.ctx.beginPath();","\tgame.ctx.lineWidth = 1;","\tgame.ctx.strokeStyle = \"lightgray\";","\t","\tt = game.transform(0, 0);","\tgame.ctx.moveTo( t.x, 0 );","\tgame.ctx.lineTo( t.x, game.mc.height );","\t","\tgame.ctx.moveTo( 0, t.y );","\tgame.ctx.lineTo( game.mc.width, t.y );","\t","\tgame.ctx.stroke();*/","\tif (!camBounds)","\t\treturn;","\tgame.ctx.beginPath();","\tgame.ctx.lineWidth = 2;","\tgame.ctx.strokeStyle = \"red\";","\t","\tt = game.transform(camBounds.x, camBounds.y);","\tgame.ctx.strokeRect( t.x, t.y, camBounds.width * game.camera.scale.x, camBounds.height * game.camera.scale.y );","\t","\tt = game.transform(camBounds.x + camBounds.width, camBounds.y + camBounds.height);","\tvar et = game.transform(camBounds.x, camBounds.y);","\tut = game.untransform(camBounds.x - camBounds.width, camBounds.y - camBounds.height);","\t","\tgame.ctx.fillStyle = \"black\";","\tgame.ctx.fillRect( 0, 0, et.x, game.mc.height );","\tgame.ctx.fillRect( t.x, 0, game.mc.width - ut.x, game.mc.height );","\t","\tgame.ctx.fillRect( 0, 0, game.mc.width, et.y );","\tgame.ctx.fillRect( 0, t.y, game.mc.width, game.mc.height - ut.y );","\t","\tt = game.transform(-game.mc.width / 2, -game.mc.height / 2);","\tgame.ctx.strokeStyle = \"blue\";","\tgame.ctx.strokeRect( t.x, t.y, game.mc.width * game.camera.scale.x, game.mc.height * game.camera.scale.y );","}","","function updateTexturePacks()","{","\ttps.innerHTML = \"\";","\tfor (var i in game.texturePacks.values)","\t{","\t\tvar tp = game.texturePacks.values[i];","\t\tif (tp.image)","\t\t{","\t\t\tvar op = document.createElement(\"option\");","\t\t\top.innerHTML = tp.src;","\t\t\ttps.appendChild(op);","\t\t}","\t}","}","","// Helper/Other","function clearInput()","{","\tmouse.isDown = false;","\tselected = [];","\tkeydowns = [];","}","function cursorInBounds()","{","\treturn mouse.x >= 0 && mouse.x <= game.mc.width && mouse.y >= 0 && mouse.y <= game.mc.height;","}","","function rand(max)","{","\treturn Math.floor(Math.random() * max);","}","function chooseRandomSong()","{","\tcurrentSong = bgmusic[rand(bgmusic.length)];","\tcurrentSong.play();","}","","// Properties","var aa = {};","function clearAttributes()","{","\taa = {};","\tattribs.innerHTML = \"\";","}","","function addAttribute(o, n, op)","{","\tn = \"\" + n;","\tvar v = o[n];","\t","\taa[n] = v;","\tvar np = document.createElement(\"div\");","\tvar pn = document.createElement(\"label\");","\tvar pv = document.createElement(\"label\");","\tpn.style[\"font-weight\"] = \"bold\";","\tpn.innerHTML = n + \": \";","\t","\tvar ni = document.createElement(\"input\");","\t","\tif (typeof op != \"undefined\")","\t{","\t\tni = document.createElement(\"select\");","\t\tif (op.indexOf(n) == -1)","\t\t\top.push(n);","\t\tfor (var i in op)","\t\t{","\t\t\tvar o = document.createElement(\"option\");","\t\t\to.innerHTML = op[i];","\t\t\tni.appendChild(o);","\t\t}","\t\tni.value = v;","\t}","\telse","\t{","\t\tif (typeof v == \"boolean\")","\t\t{","\t\t\tni = document.createElement(\"select\");","\t\t\tvar to = document.createElement(\"option\");","\t\t\tvar fo = document.createElement(\"option\");","\t\t\t","\t\t\tto.innerHTML = \"true\";","\t\t\tfo.innerHTML = \"false\";","\t\t\tni.appendChild(to);","\t\t\tni.appendChild(fo);","\t\t\t","\t\t\tni.value = \"\" + v;","\t\t\tni.onchange = function()","\t\t\t{","\t\t\t\tvar a = JSON.parse(ni.value);","\t\t\t\taa[n] = a;","\t\t\t\to[n] = a;","\t\t\t}","\t\t}","\t\telse if (v instanceof Array)","\t\t{","\t\t\tni.value = arrtostr(v);","\t\t\tni.onchange = function()","\t\t\t{","\t\t\t\tvar a = strtoarr(ni.value.replace(/ /g, \"\"));","\t\t\t\taa[n] = a;","\t\t\t\to[n] = a;","\t\t\t}","\t\t}","\t\telse if (typeof v == \"string\" || typeof v == \"number\")","\t\t{","\t\t\tni.value = v;","\t\t\tif (typeof v == \"number\")","\t\t\t\tni.type = \"number\";","\t\t\t","\t\t\tni.onchange = function()","\t\t\t{","\t\t\t\tif (ni.type == \"number\")","\t\t\t\t{","\t\t\t\t\taa[n] = +ni.value;","\t\t\t\t\to[n] = +ni.value;","\t\t\t\t}","\t\t\t\telse","\t\t\t\t{","\t\t\t\t\taa[n] = ni.value;","\t\t\t\t\to[n] = ni.value;","\t\t\t\t}","\t\t\t}","\t\t}","\t}","\t","\tpv.appendChild(ni);","\tnp.appendChild(pn);","\tnp.appendChild(pv);","\tattribs.appendChild(np);","}","","function addLabel(s)","{","\tvar d = document.createElement(\"div\");","\tvar b = document.createElement(\"b\");","\tb.innerHTML = b;","\t","\td.appendChild(b);","\tattribs.appendChild(d);","}","","function getAttribute(n)","{","\treturn aa[n];","}","","function addBlockAttribs()","{","\tvar pack = game.texturePacks.get(getCurrentTextureIndex());","\t","\tclearAttributes();","\tvar c = document.createElement(\"canvas\");","\tvar sf = 2;","\tc.width = bs * sf;","\tc.height = bs * sf;","\t","\tvar ctx = c.getContext(\"2d\");","\tctx.imageSmoothingEnabled = false;","\tattribs.appendChild(c);","\tattribs.appendChild(document.createElement(\"br\"));","\tctx.drawImage(pack.image, ganim[0], ganim[1], ganim[2], ganim[3], 0, 0, c.width, c.height);","\t","\tvar xy = { x:ganim[0] / bs, y:ganim[1] / bs };","\tvar span = mod(pack.image.width) / bs + 1;","\tif (typeof pack.map[xy.y * span + xy.x] == \"undefined\")","\t\tpack.map[xy.y * span + xy.x] = \"solid\";","\t","\tvar s = document.createElement(\"select\");","\tfor (var i in BLOCK_TYPES)","\t{","\t\tvar op = document.createElement(\"option\");","\t\top.innerHTML = BLOCK_TYPES[i];","\t\ts.appendChild(op);","\t}","\ts.onchange = function()","\t{","\t\tpack.map[xy.y * span + xy.x] = s.value;","\t}","\t","\ts.value = pack.map[xy.y * span + xy.x];","\tvar nd = document.createElement(\"div\");","\tnd.innerHTML = \"<b>type: </b>\";","\tnd.appendChild(s);","\tattribs.appendChild(nd);","}","","function clearUp(a)","{","\tfor (var i = 0; i < a.length; i++)","\t{","\t\tif (typeof a[i] == \"undefined\")","\t\t\ta[i] = \"solid\";","\t}","\treturn a;","}","function getTextureMap()","{","\treturn arrtostr( clearUp( game.texturePacks.get(getCurrentTextureIndex()).map ) );","}"]}]]},"ace":{"folds":[],"scrolltop":19380,"scrollleft":0,"selection":{"start":{"row":1159,"column":24},"end":{"row":1159,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1419978132000,"hash":"1cc47f9de47d3367a2bbc9bfceaad4051ca37b8d"}